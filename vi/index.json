[
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/",
	"title": "Báo cáo thực tập",
	"tags": [],
	"description": "",
	"content": "Báo cáo thực tập Thông tin sinh viên: Họ và tên: Đặng Đình Bắc\nSố điện thoại: 0352437611\nEmail: bacddse180351@fpt.edu.vn\nTrường: Đại học FPT TP.HCM\nNgành: Kỹ thuật phần mềm\nLớp: AWS082025\nCông ty thực tập: Công ty TNHH Amazon Web Services Vietnam\nVị trí thực tập: FCJ Cloud Intern\nThời gian thực tập: Từ ngày 09/09/2025 đến ngày 12/11/2025\nNội dung báo cáo Worklog Proposal Các bài blogs đã dịch Các events đã tham gia Workshop Tự đánh giá Chia sẻ, đóng góp ý kiến "
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/3-blogstranslated/3.1-blog1/",
	"title": "Blog 1",
	"tags": [],
	"description": "",
	"content": "Nâng cao khả năng hiển thị dữ liệu với Cribl Search và Amazon Managed Grafana Trong môi trường số ngày nay, các tổ chức phải đối mặt với thách thức khi quản lý lượng dữ liệu vận hành ngày càng tăng trên hạ tầng của họ — log, metric, trace từ các ứng dụng và hệ thống.\nThông tin này chứa chìa khóa để hiểu sâu hơn và cải thiện hiệu năng, nhưng để dùng được nó một cách hiệu quả, các tổ chức cần một pipeline quan sát (observability pipeline) có khả năng mở rộng, có thể cấu hình (customizable), để thu thập, xử lý và định tuyến dữ liệu đến các điểm đích phù hợp.\nCribl \u0026amp; Amazon Managed Grafana Cribl là đối tác trong mạng lưới APN của AWS, cung cấp giải pháp quản trị dữ liệu tập trung và khả năng định tuyến có thể cấu hình cho lượng lớn dữ liệu vận hành và bảo mật.\nAmazon Managed Grafana dùng để trực quan hóa dữ liệu đã được xử lý qua Cribl, biến chúng thành các dashboard có thể hành động được, với thông tin theo thời gian thực.\nViệc tích hợp Cribl Search với Amazon Managed Grafana mở ra khả năng giám sát, phân tích mạnh mẽ hơn, giúp ra quyết định dựa vào dữ liệu nhanh hơn, tin cậy hơn, và trong quy mô lớn hơn.\nCác Trường Hợp Sử Dụng Nổi Bật 1. Giám sát hạ tầng cloud Cribl Search có thể truy vấn dữ liệu từ các nguồn như Amazon S3, Cribl Lake, Amazon Security Lake hoặc các dịch vụ native AWS qua APIs, mà không cần phải index trước. Từ kết quả tìm được, gửi tiếp qua Cribl Stream tới các hệ thống SIEM (Security Information and Event Management) để phân tích.\nGrafana sau đó được dùng để tạo dashboard thời gian thực, hiển thị việc sử dụng tài nguyên, chi phí, và hiệu suất trên các vùng AWS và dịch vụ liên quan.\n2. Quản lý hiệu năng ứng dụng Tạo dashboard riêng cho ứng dụng: độ trễ, tỉ lệ lỗi, trải nghiệm người dùng, và khả năng drill-down để phân tích chi tiết các giao dịch.\n3. Vận hành bảo mật Hiển thị sự kiện bảo mật qua dashboard chuyên dụng, cải thiện tốc độ phản ứng với sự cố và điều tra. Cribl hỗ trợ giám sát liên tục các sự kiện bảo mật, làm báo cáo tuân thủ, và nâng cao khả năng phát hiện mối đe dọa.\nCác Yêu Cầu Tiền Đề (Prerequisites) Tài khoản AWS với quyền quản trị (administrative access) Bucket Amazon S3 hoặc tạo mới, và VPC Flow Logs với quyền ghi vào bucket đó Cấu hình IAM phù hợp cho người dùng cần kích hoạt flow logs Tài khoản Cribl Cloud Các Bước Triển Khai 1. Thiết lập xác thực API Dùng các token API để bảo đảm giao tiếp an toàn giữa Cribl và Amazon Managed Grafana. Truy cập phần \u0026ldquo;API Credentials\u0026rdquo; trong Cribl dashboard để lấy Client ID, secret,…\n2. Cài đặt và cấu hình plugin Vào Amazon Managed Grafana \u0026gt; Plugins \u0026gt; “Add new connection” \u0026gt; tìm plugin “Cribl” \u0026gt; thêm kết nối bằng thông tin Cribl.\n3. Tạo visualization đầu tiên Trong Grafana, dùng tab Query, nhập truy vấn mẫu để lấy dữ liệu VPC Flow Logs trong 15 phút gần nhất, nhóm theo trạng thái log mỗi một phút.\n4. Khám phá sâu hơn với Table Search bên trong Amazon Managed Grafana Chuyển từ dạng biểu đồ thời gian sang dạng bảng để xem chi tiết từng bản ghi log, tìm bất thường, theo dõi đường đi của các request,… Ví dụ truy vấn lấy 1.000 bản ghi từ dataset để hỗ trợ điều tra.\nDọn Dẹp và Cân Nhắc Chi Phí Xóa các Flow Logs VPC và các bucket S3 tạm thời khi không còn dùng nữa. Gỡ bỏ các cấu hình Cribl không sử dụng để tránh phát sinh chi phí “vô ích”. Kết Luận Việc tích hợp giữa Cribl và Amazon Managed Grafana tạo ra một pipeline quan sát có thể tùy biến, tập trung quản lý dữ liệu, tăng cường bảo mật và tuân thủ, đồng thời trực quan hóa dữ liệu để hỗ trợ quyết định hành động. Đây là giải pháp hữu ích cho các doanh nghiệp muốn observability ở quy mô lớn và sẵn sàng cho tương lai.\n"
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/3-blogstranslated/3.2-blog2/",
	"title": "Blog 2",
	"tags": [],
	"description": "",
	"content": "Giúp khách hàng triển khai AI agent sẵn sàng cho sản xuất ở quy mô lớn AI agent đang mở ra một cuộc cách mạng công nghệ mới, tương tự như sự ra đời của Internet. AWS cam kết xây dựng nền tảng tốt nhất để phát triển và triển khai AI agent an toàn, đáng tin cậy và có khả năng mở rộng. Các ứng dụng thực tế đã cho thấy tiềm năng lớn trong y tế (AstraZeneca), tài chính (Yahoo Finance), và nông nghiệp (Syngenta). Để mở rộng thành công này, AWS tập trung cung cấp các công cụ và nền tảng giúp tổ chức dễ dàng chuyển AI agent từ thử nghiệm sang sản xuất, với trọng tâm là bảo mật, độ tin cậy và khả năng thích ứng theo thời gian.\nNguyên tắc cốt lõi cho Agentic AI AWS định hướng dựa trên 4 nguyên tắc chính:\nTính linh hoạt (Agility)\nXây dựng hệ thống mô-đun, dễ mở rộng và thích ứng khi mô hình, tính năng hoặc yêu cầu thay đổi. Phát triển nền tảng cơ bản (Evolve Fundamentals)\nBảo mật \u0026amp; Tin cậy: cô lập session, bộ nhớ, phục hồi và mở rộng cho nhiều người dùng đồng thời. Quản lý danh tính \u0026amp; quyền hạn: tích hợp với hệ thống IAM và identity provider. Quan sát \u0026amp; giám sát: theo dõi, telemetry theo thời gian thực. Truy cập dữ liệu: kết hợp dữ liệu riêng một cách an toàn. Tích hợp liền mạch: làm việc với công cụ, cloud, API và các agent khác. Hiệu quả với mô hình \u0026amp; dữ liệu (Model Choice \u0026amp; Data)\nCho phép lựa chọn mô hình phù hợp (chi phí, tốc độ, khả năng suy luận…). Cung cấp công cụ tùy chỉnh: fine-tuning, alignment, huấn luyện trước \u0026amp; sau. Nova Customization: tùy chỉnh linh hoạt (PEFT, fine-tuning đầy đủ…). Nova Act: hỗ trợ tác vụ tự động trên trình duyệt. Amazon S3 Vectors: lưu trữ vector embedding rẻ hơn ~90% nhưng vẫn đảm bảo hiệu năng, giúp agent có trí nhớ và ngữ cảnh phong phú hơn. Triển khai giải pháp tạo giá trị (Deploy Transformative Solutions)\nCung cấp sẵn công cụ/agent thay vì để khách hàng xây từ đầu. Marketplace: kho ứng dụng và agent do AWS và đối tác phát triển. Ví dụ: Kiro: IDE cho phát triển dựa trên specification. AWS Transform: hỗ trợ phân tích mã nguồn và hiện đại hóa hệ thống. Amazon Connect: tích hợp AI agents trong dịch vụ khách hàng. Các dịch vụ \u0026amp; tính năng mới AgentCore: bộ dịch vụ vận hành agents quy mô doanh nghiệp (runtime, identity, observability, memory, browser, code interpreter…). Nova Customization trên SageMaker AI: mở rộng khả năng tùy chỉnh mô hình (pre-training, fine-tuning, alignment). Nova Act SDK: công cụ preview cho AI agents tự động hóa trình duyệt. Amazon S3 Vectors: hỗ trợ vector gốc trong S3, giảm chi phí lưu trữ vector ~90%. Marketplace Agents \u0026amp; Tools: kho các agent và công cụ sẵn sàng triển khai từ AWS Partner. Pre-built Solutions: như Kiro, AWS Transform giúp rút ngắn thời gian từ ý tưởng đến sản phẩm thực tế. Hướng đi \u0026amp; Khuyến nghị Bắt đầu ngay: chọn một vấn đề cụ thể trong kinh doanh để thử nghiệm. Lặp nhanh: thu thập phản hồi thực tế và cải tiến liên tục. Hỗ trợ từ AWS: thông qua Generative AI Innovation Center và các dịch vụ tư vấn chuyên sâu. Kết luận AWS đang xây dựng nền tảng toàn diện để giúp tổ chức xây dựng, tùy chỉnh, bảo mật và mở rộng AI agents. Với các dịch vụ mới như AgentCore, Nova, S3 Vectors, mục tiêu là đưa AI agents từ thử nghiệm sang sản xuất, đảm bảo tin cậy, thích ứng và mang lại giá trị kinh doanh thực sự.\n"
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/3-blogstranslated/3.3-blog3/",
	"title": "Blog 3",
	"tags": [],
	"description": "",
	"content": "Tăng trưởng định hướng mục tiêu: Thúc đẩy thành công AWS Marketplace với COSS Các cloud marketplace đã trở thành một kênh mạnh mẽ để các công ty công nghệ tiếp cận khách hàng. Theo dự báo của Canalys, đến năm 2028, doanh số phần mềm doanh nghiệp qua cloud marketplace sẽ đạt 85 tỷ USD, với nhiều tổ chức hiện nay chọn AWS Marketplace làm kênh mua sắm ưu tiên cho phần mềm, dữ liệu và dịch vụ chuyên nghiệp. (aws.amazon.com)\nĐể giúp đối tác thành công, AWS giới thiệu khung COSS (Characteristics of Successful Sellers) gồm sáu trụ cột bao gồm chiến lược, kinh doanh và kỹ thuật. Nghiên cứu cho thấy các đối tác áp dụng COSS có tốc độ tăng trưởng doanh số Marketplace nhanh hơn 31% so với trung bình. (aws.amazon.com)\nCam kết doanh thu AWS Marketplace từ phía đối tác Một trụ cột nền tảng của COSS là đảm bảo cam kết từ lãnh đạo đối với doanh thu AWS Marketplace. Thành công bắt đầu từ cấp cao nhất — ban lãnh đạo cần đặt mục tiêu rõ ràng, thể hiện sự ưu tiên và định hướng toàn bộ tổ chức hướng đến tăng trưởng Marketplace. (aws.amazon.com)\nVì sao điều này quan trọng:\nGắn kết tổ chức: Mục tiêu doanh thu giúp đồng bộ product, sales, marketing và operations cùng hướng đến một đích chung. Ưu tiên nguồn lực: Khi doanh thu Marketplace là mục tiêu cụ thể, các nhóm dễ dàng phân bổ ngân sách, nhân sự và kỹ thuật hơn. Trách nhiệm \u0026amp; đo lường: Mục tiêu rõ ràng biến Marketplace từ một kênh phụ thành một sáng kiến kinh doanh trọng yếu, có thước đo và chủ sở hữu cụ thể. Đặt mục tiêu cho các nhóm Để biến tham vọng cấp cao thành kết quả thực tế, tổ chức cần phân bổ mục tiêu đầu ra và mục tiêu đầu vào cho từng bộ phận:\nBộ phận / Nhóm Ví dụ mục tiêu \u0026amp; hành động Sales Tích hợp mục tiêu Marketplace vào KPI/hoa hồng; đặt quota cho doanh số, tỷ lệ thắng, và các giao dịch theo phân khúc qua Marketplace. Operations / Enablement Xây dựng mục tiêu hỗ trợ cho legal, finance, sales ops; tự động hóa quy trình private offer; tích hợp dữ liệu Marketplace vào dashboard vận hành. Product / Marketing Tối ưu hóa listing, tăng traffic \u0026amp; conversion; xây dựng tài liệu marketing; phối hợp co-marketing; áp dụng cơ chế product-led growth. Training / Onboarding Đưa nội dung Marketplace vào chương trình đào tạo nhân sự mới; tổ chức các buổi training định kỳ cho sales, ops và các bên liên quan. Nhờ đó, AWS Marketplace được nâng lên thành một động lực tăng trưởng thay vì chỉ là một kênh bổ sung.\nCác bước triển khai \u0026amp; thực tiễn tốt nhất Đặt mục tiêu doanh thu cụ thể\nBắt đầu với chỉ tiêu rõ ràng: tỷ lệ doanh thu qua Marketplace hoặc tốc độ tăng trưởng mong muốn.\nThúc đẩy gắn kết tổ chức\nTổ chức các buổi họp đa chức năng; nhấn mạnh tầm quan trọng chiến lược; đảm bảo mọi người hiểu vai trò của mình.\nĐiều chỉnh cơ chế khuyến khích\nGắn KPI/hoa hồng sales trực tiếp với doanh số Marketplace để khuyến khích hành vi đúng.\nTheo dõi, điều chỉnh, ghi nhận\nSử dụng dashboard để theo dõi tiến độ, phát hiện lỗ hổng, điều chỉnh kịp thời và khen thưởng để giữ động lực.\nHướng đi \u0026amp; khuyến nghị Bắt đầu ngay — chọn một sản phẩm hoặc use case để thử nghiệm Marketplace thay vì chờ thời điểm “hoàn hảo”. Dùng dữ liệu \u0026amp; phản hồi ban đầu để cải tiến nhanh chóng. Thành quả thực tế giúp củng cố cam kết từ lãnh đạo và tăng cường hợp tác co-sell với AWS. Coi COSS framework là một phần cốt lõi của hoạt động, thay vì một sáng kiến bên lề. Kết luận Cơ hội từ AWS Marketplace là rất lớn — nhưng thành công đòi hỏi sự chủ động và định hướng rõ ràng. Bằng cách cam kết mục tiêu, điều chỉnh khuyến khích và triển khai thực tiễn tốt nhất, đối tác có thể biến Marketplace thành động cơ tăng trưởng bền vững. Với khung COSS, con đường tiến tới thành công trên Marketplace trở nên rõ ràng, có thể đo lường và đầy tiềm năng.\n"
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/3-blogstranslated/3.4-blog4/",
	"title": "Blog 4",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nBắt đầu với healthcare data lakes: Sử dụng microservices Các data lake có thể giúp các bệnh viện và cơ sở y tế chuyển dữ liệu thành những thông tin chi tiết về doanh nghiệp và duy trì hoạt động kinh doanh liên tục, đồng thời bảo vệ quyền riêng tư của bệnh nhân. Data lake là một kho lưu trữ tập trung, được quản lý và bảo mật để lưu trữ tất cả dữ liệu của bạn, cả ở dạng ban đầu và đã xử lý để phân tích. data lake cho phép bạn chia nhỏ các kho chứa dữ liệu và kết hợp các loại phân tích khác nhau để có được thông tin chi tiết và đưa ra các quyết định kinh doanh tốt hơn.\nBài đăng trên blog này là một phần của loạt bài lớn hơn về việc bắt đầu cài đặt data lake dành cho lĩnh vực y tế. Trong bài đăng blog cuối cùng của tôi trong loạt bài, “Bắt đầu với data lake dành cho lĩnh vực y tế: Đào sâu vào Amazon Cognito”, tôi tập trung vào các chi tiết cụ thể của việc sử dụng Amazon Cognito và Attribute Based Access Control (ABAC) để xác thực và ủy quyền người dùng trong giải pháp data lake y tế. Trong blog này, tôi trình bày chi tiết cách giải pháp đã phát triển ở cấp độ cơ bản, bao gồm các quyết định thiết kế mà tôi đã đưa ra và các tính năng bổ sung được sử dụng. Bạn có thể truy cập các code samples cho giải pháp tại Git repo này để tham khảo.\nHướng dẫn kiến trúc Thay đổi chính kể từ lần trình bày cuối cùng của kiến trúc tổng thể là việc tách dịch vụ đơn lẻ thành một tập hợp các dịch vụ nhỏ để cải thiện khả năng bảo trì và tính linh hoạt. Việc tích hợp một lượng lớn dữ liệu y tế khác nhau thường yêu cầu các trình kết nối chuyên biệt cho từng định dạng; bằng cách giữ chúng được đóng gói riêng biệt với microservices, chúng ta có thể thêm, xóa và sửa đổi từng trình kết nối mà không ảnh hưởng đến những kết nối khác. Các microservices được kết nối rời thông qua tin nhắn publish/subscribe tập trung trong cái mà tôi gọi là “pub/sub hub”.\nGiải pháp này đại diện cho những gì tôi sẽ coi là một lần lặp nước rút hợp lý khác từ last post của tôi. Phạm vi vẫn được giới hạn trong việc nhập và phân tích cú pháp đơn giản của các HL7v2 messages được định dạng theo Quy tắc mã hóa 7 (ER7) thông qua giao diện REST.\nKiến trúc giải pháp bây giờ như sau:\nHình 1. Kiến trúc tổng thể; những ô màu thể hiện những dịch vụ riêng biệt.\nMặc dù thuật ngữ microservices có một số sự mơ hồ cố hữu, một số đặc điểm là chung:\nChúng nhỏ, tự chủ, kết hợp rời rạc Có thể tái sử dụng, giao tiếp thông qua giao diện được xác định rõ Chuyên biệt để giải quyết một việc Thường được triển khai trong event-driven architecture Khi xác định vị trí tạo ranh giới giữa các microservices, cần cân nhắc:\nNội tại: công nghệ được sử dụng, hiệu suất, độ tin cậy, khả năng mở rộng Bên ngoài: chức năng phụ thuộc, tần suất thay đổi, khả năng tái sử dụng Con người: quyền sở hữu nhóm, quản lý cognitive load Lựa chọn công nghệ và phạm vi giao tiếp Phạm vi giao tiếp Các công nghệ / mô hình cần xem xét Trong một microservice Amazon Simple Queue Service (Amazon SQS), AWS Step Functions Giữa các microservices trong một dịch vụ AWS CloudFormation cross-stack references, Amazon Simple Notification Service (Amazon SNS) Giữa các dịch vụ Amazon EventBridge, AWS Cloud Map, Amazon API Gateway The pub/sub hub Việc sử dụng kiến trúc hub-and-spoke (hay message broker) hoạt động tốt với một số lượng nhỏ các microservices liên quan chặt chẽ.\nMỗi microservice chỉ phụ thuộc vào hub Kết nối giữa các microservice chỉ giới hạn ở nội dung của message được xuất Giảm số lượng synchronous calls vì pub/sub là push không đồng bộ một chiều Nhược điểm: cần phối hợp và giám sát để tránh microservice xử lý nhầm message.\nCore microservice Cung cấp dữ liệu nền tảng và lớp truyền thông, gồm:\nAmazon S3 bucket cho dữ liệu Amazon DynamoDB cho danh mục dữ liệu AWS Lambda để ghi message vào data lake và danh mục Amazon SNS topic làm hub Amazon S3 bucket cho artifacts như mã Lambda Chỉ cho phép truy cập ghi gián tiếp vào data lake qua hàm Lambda → đảm bảo nhất quán.\nFront door microservice Cung cấp API Gateway để tương tác REST bên ngoài Xác thực \u0026amp; ủy quyền dựa trên OIDC thông qua Amazon Cognito Cơ chế deduplication tự quản lý bằng DynamoDB thay vì SNS FIFO vì: SNS deduplication TTL chỉ 5 phút SNS FIFO yêu cầu SQS FIFO Chủ động báo cho sender biết message là bản sao Staging ER7 microservice Lambda “trigger” đăng ký với pub/sub hub, lọc message theo attribute Step Functions Express Workflow để chuyển ER7 → JSON Hai Lambda: Sửa format ER7 (newline, carriage return) Parsing logic Kết quả hoặc lỗi được đẩy lại vào pub/sub hub Tính năng mới trong giải pháp 1. AWS CloudFormation cross-stack references Ví dụ outputs trong core microservice:\nOutputs: Bucket: Value: !Ref Bucket Export: Name: !Sub ${AWS::StackName}-Bucket ArtifactBucket: Value: !Ref ArtifactBucket Export: Name: !Sub ${AWS::StackName}-ArtifactBucket Topic: Value: !Ref Topic Export: Name: !Sub ${AWS::StackName}-Topic Catalog: Value: !Ref Catalog Export: Name: !Sub ${AWS::StackName}-Catalog CatalogArn: Value: !GetAtt Catalog.Arn Export: Name: !Sub ${AWS::StackName}-CatalogArn "
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/3-blogstranslated/3.5-blog5/",
	"title": "Blog 5",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nBắt đầu với healthcare data lakes: Sử dụng microservices Các data lake có thể giúp các bệnh viện và cơ sở y tế chuyển dữ liệu thành những thông tin chi tiết về doanh nghiệp và duy trì hoạt động kinh doanh liên tục, đồng thời bảo vệ quyền riêng tư của bệnh nhân. Data lake là một kho lưu trữ tập trung, được quản lý và bảo mật để lưu trữ tất cả dữ liệu của bạn, cả ở dạng ban đầu và đã xử lý để phân tích. data lake cho phép bạn chia nhỏ các kho chứa dữ liệu và kết hợp các loại phân tích khác nhau để có được thông tin chi tiết và đưa ra các quyết định kinh doanh tốt hơn.\nBài đăng trên blog này là một phần của loạt bài lớn hơn về việc bắt đầu cài đặt data lake dành cho lĩnh vực y tế. Trong bài đăng blog cuối cùng của tôi trong loạt bài, “Bắt đầu với data lake dành cho lĩnh vực y tế: Đào sâu vào Amazon Cognito”, tôi tập trung vào các chi tiết cụ thể của việc sử dụng Amazon Cognito và Attribute Based Access Control (ABAC) để xác thực và ủy quyền người dùng trong giải pháp data lake y tế. Trong blog này, tôi trình bày chi tiết cách giải pháp đã phát triển ở cấp độ cơ bản, bao gồm các quyết định thiết kế mà tôi đã đưa ra và các tính năng bổ sung được sử dụng. Bạn có thể truy cập các code samples cho giải pháp tại Git repo này để tham khảo.\nHướng dẫn kiến trúc Thay đổi chính kể từ lần trình bày cuối cùng của kiến trúc tổng thể là việc tách dịch vụ đơn lẻ thành một tập hợp các dịch vụ nhỏ để cải thiện khả năng bảo trì và tính linh hoạt. Việc tích hợp một lượng lớn dữ liệu y tế khác nhau thường yêu cầu các trình kết nối chuyên biệt cho từng định dạng; bằng cách giữ chúng được đóng gói riêng biệt với microservices, chúng ta có thể thêm, xóa và sửa đổi từng trình kết nối mà không ảnh hưởng đến những kết nối khác. Các microservices được kết nối rời thông qua tin nhắn publish/subscribe tập trung trong cái mà tôi gọi là “pub/sub hub”.\nGiải pháp này đại diện cho những gì tôi sẽ coi là một lần lặp nước rút hợp lý khác từ last post của tôi. Phạm vi vẫn được giới hạn trong việc nhập và phân tích cú pháp đơn giản của các HL7v2 messages được định dạng theo Quy tắc mã hóa 7 (ER7) thông qua giao diện REST.\nKiến trúc giải pháp bây giờ như sau:\nHình 1. Kiến trúc tổng thể; những ô màu thể hiện những dịch vụ riêng biệt.\nMặc dù thuật ngữ microservices có một số sự mơ hồ cố hữu, một số đặc điểm là chung:\nChúng nhỏ, tự chủ, kết hợp rời rạc Có thể tái sử dụng, giao tiếp thông qua giao diện được xác định rõ Chuyên biệt để giải quyết một việc Thường được triển khai trong event-driven architecture Khi xác định vị trí tạo ranh giới giữa các microservices, cần cân nhắc:\nNội tại: công nghệ được sử dụng, hiệu suất, độ tin cậy, khả năng mở rộng Bên ngoài: chức năng phụ thuộc, tần suất thay đổi, khả năng tái sử dụng Con người: quyền sở hữu nhóm, quản lý cognitive load Lựa chọn công nghệ và phạm vi giao tiếp Phạm vi giao tiếp Các công nghệ / mô hình cần xem xét Trong một microservice Amazon Simple Queue Service (Amazon SQS), AWS Step Functions Giữa các microservices trong một dịch vụ AWS CloudFormation cross-stack references, Amazon Simple Notification Service (Amazon SNS) Giữa các dịch vụ Amazon EventBridge, AWS Cloud Map, Amazon API Gateway The pub/sub hub Việc sử dụng kiến trúc hub-and-spoke (hay message broker) hoạt động tốt với một số lượng nhỏ các microservices liên quan chặt chẽ.\nMỗi microservice chỉ phụ thuộc vào hub Kết nối giữa các microservice chỉ giới hạn ở nội dung của message được xuất Giảm số lượng synchronous calls vì pub/sub là push không đồng bộ một chiều Nhược điểm: cần phối hợp và giám sát để tránh microservice xử lý nhầm message.\nCore microservice Cung cấp dữ liệu nền tảng và lớp truyền thông, gồm:\nAmazon S3 bucket cho dữ liệu Amazon DynamoDB cho danh mục dữ liệu AWS Lambda để ghi message vào data lake và danh mục Amazon SNS topic làm hub Amazon S3 bucket cho artifacts như mã Lambda Chỉ cho phép truy cập ghi gián tiếp vào data lake qua hàm Lambda → đảm bảo nhất quán.\nFront door microservice Cung cấp API Gateway để tương tác REST bên ngoài Xác thực \u0026amp; ủy quyền dựa trên OIDC thông qua Amazon Cognito Cơ chế deduplication tự quản lý bằng DynamoDB thay vì SNS FIFO vì: SNS deduplication TTL chỉ 5 phút SNS FIFO yêu cầu SQS FIFO Chủ động báo cho sender biết message là bản sao Staging ER7 microservice Lambda “trigger” đăng ký với pub/sub hub, lọc message theo attribute Step Functions Express Workflow để chuyển ER7 → JSON Hai Lambda: Sửa format ER7 (newline, carriage return) Parsing logic Kết quả hoặc lỗi được đẩy lại vào pub/sub hub Tính năng mới trong giải pháp 1. AWS CloudFormation cross-stack references Ví dụ outputs trong core microservice:\nOutputs: Bucket: Value: !Ref Bucket Export: Name: !Sub ${AWS::StackName}-Bucket ArtifactBucket: Value: !Ref ArtifactBucket Export: Name: !Sub ${AWS::StackName}-ArtifactBucket Topic: Value: !Ref Topic Export: Name: !Sub ${AWS::StackName}-Topic Catalog: Value: !Ref Catalog Export: Name: !Sub ${AWS::StackName}-Catalog CatalogArn: Value: !GetAtt Catalog.Arn Export: Name: !Sub ${AWS::StackName}-CatalogArn "
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/3-blogstranslated/3.6-blog6/",
	"title": "Blog 6",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nBắt đầu với healthcare data lakes: Sử dụng microservices Các data lake có thể giúp các bệnh viện và cơ sở y tế chuyển dữ liệu thành những thông tin chi tiết về doanh nghiệp và duy trì hoạt động kinh doanh liên tục, đồng thời bảo vệ quyền riêng tư của bệnh nhân. Data lake là một kho lưu trữ tập trung, được quản lý và bảo mật để lưu trữ tất cả dữ liệu của bạn, cả ở dạng ban đầu và đã xử lý để phân tích. data lake cho phép bạn chia nhỏ các kho chứa dữ liệu và kết hợp các loại phân tích khác nhau để có được thông tin chi tiết và đưa ra các quyết định kinh doanh tốt hơn.\nBài đăng trên blog này là một phần của loạt bài lớn hơn về việc bắt đầu cài đặt data lake dành cho lĩnh vực y tế. Trong bài đăng blog cuối cùng của tôi trong loạt bài, “Bắt đầu với data lake dành cho lĩnh vực y tế: Đào sâu vào Amazon Cognito”, tôi tập trung vào các chi tiết cụ thể của việc sử dụng Amazon Cognito và Attribute Based Access Control (ABAC) để xác thực và ủy quyền người dùng trong giải pháp data lake y tế. Trong blog này, tôi trình bày chi tiết cách giải pháp đã phát triển ở cấp độ cơ bản, bao gồm các quyết định thiết kế mà tôi đã đưa ra và các tính năng bổ sung được sử dụng. Bạn có thể truy cập các code samples cho giải pháp tại Git repo này để tham khảo.\nHướng dẫn kiến trúc Thay đổi chính kể từ lần trình bày cuối cùng của kiến trúc tổng thể là việc tách dịch vụ đơn lẻ thành một tập hợp các dịch vụ nhỏ để cải thiện khả năng bảo trì và tính linh hoạt. Việc tích hợp một lượng lớn dữ liệu y tế khác nhau thường yêu cầu các trình kết nối chuyên biệt cho từng định dạng; bằng cách giữ chúng được đóng gói riêng biệt với microservices, chúng ta có thể thêm, xóa và sửa đổi từng trình kết nối mà không ảnh hưởng đến những kết nối khác. Các microservices được kết nối rời thông qua tin nhắn publish/subscribe tập trung trong cái mà tôi gọi là “pub/sub hub”.\nGiải pháp này đại diện cho những gì tôi sẽ coi là một lần lặp nước rút hợp lý khác từ last post của tôi. Phạm vi vẫn được giới hạn trong việc nhập và phân tích cú pháp đơn giản của các HL7v2 messages được định dạng theo Quy tắc mã hóa 7 (ER7) thông qua giao diện REST.\nKiến trúc giải pháp bây giờ như sau:\nHình 1. Kiến trúc tổng thể; những ô màu thể hiện những dịch vụ riêng biệt.\nMặc dù thuật ngữ microservices có một số sự mơ hồ cố hữu, một số đặc điểm là chung:\nChúng nhỏ, tự chủ, kết hợp rời rạc Có thể tái sử dụng, giao tiếp thông qua giao diện được xác định rõ Chuyên biệt để giải quyết một việc Thường được triển khai trong event-driven architecture Khi xác định vị trí tạo ranh giới giữa các microservices, cần cân nhắc:\nNội tại: công nghệ được sử dụng, hiệu suất, độ tin cậy, khả năng mở rộng Bên ngoài: chức năng phụ thuộc, tần suất thay đổi, khả năng tái sử dụng Con người: quyền sở hữu nhóm, quản lý cognitive load Lựa chọn công nghệ và phạm vi giao tiếp Phạm vi giao tiếp Các công nghệ / mô hình cần xem xét Trong một microservice Amazon Simple Queue Service (Amazon SQS), AWS Step Functions Giữa các microservices trong một dịch vụ AWS CloudFormation cross-stack references, Amazon Simple Notification Service (Amazon SNS) Giữa các dịch vụ Amazon EventBridge, AWS Cloud Map, Amazon API Gateway The pub/sub hub Việc sử dụng kiến trúc hub-and-spoke (hay message broker) hoạt động tốt với một số lượng nhỏ các microservices liên quan chặt chẽ.\nMỗi microservice chỉ phụ thuộc vào hub Kết nối giữa các microservice chỉ giới hạn ở nội dung của message được xuất Giảm số lượng synchronous calls vì pub/sub là push không đồng bộ một chiều Nhược điểm: cần phối hợp và giám sát để tránh microservice xử lý nhầm message.\nCore microservice Cung cấp dữ liệu nền tảng và lớp truyền thông, gồm:\nAmazon S3 bucket cho dữ liệu Amazon DynamoDB cho danh mục dữ liệu AWS Lambda để ghi message vào data lake và danh mục Amazon SNS topic làm hub Amazon S3 bucket cho artifacts như mã Lambda Chỉ cho phép truy cập ghi gián tiếp vào data lake qua hàm Lambda → đảm bảo nhất quán.\nFront door microservice Cung cấp API Gateway để tương tác REST bên ngoài Xác thực \u0026amp; ủy quyền dựa trên OIDC thông qua Amazon Cognito Cơ chế deduplication tự quản lý bằng DynamoDB thay vì SNS FIFO vì: SNS deduplication TTL chỉ 5 phút SNS FIFO yêu cầu SQS FIFO Chủ động báo cho sender biết message là bản sao Staging ER7 microservice Lambda “trigger” đăng ký với pub/sub hub, lọc message theo attribute Step Functions Express Workflow để chuyển ER7 → JSON Hai Lambda: Sửa format ER7 (newline, carriage return) Parsing logic Kết quả hoặc lỗi được đẩy lại vào pub/sub hub Tính năng mới trong giải pháp 1. AWS CloudFormation cross-stack references Ví dụ outputs trong core microservice:\nOutputs: Bucket: Value: !Ref Bucket Export: Name: !Sub ${AWS::StackName}-Bucket ArtifactBucket: Value: !Ref ArtifactBucket Export: Name: !Sub ${AWS::StackName}-ArtifactBucket Topic: Value: !Ref Topic Export: Name: !Sub ${AWS::StackName}-Topic Catalog: Value: !Ref Catalog Export: Name: !Sub ${AWS::StackName}-Catalog CatalogArn: Value: !GetAtt Catalog.Arn Export: Name: !Sub ${AWS::StackName}-CatalogArn "
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/5-workshop/5.4-s3-onprem/5.4.1-prepare/",
	"title": "Chuẩn bị tài nguyên",
	"tags": [],
	"description": "",
	"content": "Để chuẩn bị cho phần này của workshop, bạn sẽ cần phải:\nTriển khai CloudFormation stack Sửa đổi bảng định tuyến VPC. Các thành phần này hoạt động cùng nhau để mô phỏng DNS forwarding và name resolution.\nTriển khai CloudFormation stack Mẫu CloudFormation sẽ tạo các dịch vụ bổ sung để hỗ trợ mô phỏng môi trường truyền thống:\nMột Route 53 Private Hosted Zone lưu trữ các bản ghi Bí danh (Alias records) cho điểm cuối PrivateLink S3 Một Route 53 Inbound Resolver endpoint cho phép \u0026ldquo;VPC Cloud\u0026rdquo; giải quyết các yêu cầu resolve DNS gửi đến Private Hosted Zone Một Route 53 Outbound Resolver endpoint cho phép \u0026ldquo;VPC On-prem\u0026rdquo; chuyển tiếp các yêu cầu DNS cho S3 sang \u0026ldquo;VPC Cloud\u0026rdquo; Click link sau để mở AWS CloudFormation console. Mẫu yêu cầu sẽ được tải sẵn vào menu. Chấp nhận tất cả mặc định và nhấp vào Tạo stack. Có thể mất vài phút để triển khai stack hoàn tất. Bạn có thể tiếp tục với bước tiếp theo mà không cần đợi quá trình triển khai kết thúc.\nCập nhật bảng định tuyến private on-premise Workshop này sử dụng StrongSwan VPN chạy trên EC2 instance để mô phỏng khả năng kết nối giữa trung tâm dữ liệu truyền thống và môi trường cloud AWS. Hầu hết các thành phần bắt buộc đều được cung cấp trước khi bạn bắt đầu. Để hoàn tất cấu hình VPN, bạn sẽ sửa đổi bảng định tuyến \u0026ldquo;VPC on-prem\u0026rdquo; để hướng lưu lượng đến cloud đi qua StrongSwan VPN instance.\nMở Amazon EC2 console\nChọn instance tên infra-vpngw-test. Từ Details tab, copy Instance ID và paste vào text editor của bạn để sử dụng ở những bước tiếp theo\nĐi đến VPC menu bằng cách gõ \u0026ldquo;VPC\u0026rdquo; vào Search box\nClick vào Route Tables, chọn RT Private On-prem route table, chọn Routes tab, và click Edit Routes.\nClick Add route. Destination: CIDR block của Cloud VPC Target: ID của infra-vpngw-test instance (bạn đã lưu lại ở bước trên) Click Save changes "
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/4-eventparticipated/4.1-event1/",
	"title": "Event 1",
	"tags": [],
	"description": "",
	"content": "Bài thu hoạch “Vietnam Cloud Day 2025: Ho Chi Minh City Connect Edition for Builders” Giới thiệu chung Vietnam Cloud Day 2025: Ho Chi Minh City Connect Edition for Builders là sự kiện trực tiếp đặc biệt do Amazon Web Services (AWS) tổ chức, nhằm kết nối cộng đồng kỹ sư, kiến trúc sư và nhà phát triển tại TP. Hồ Chí Minh với hội nghị chính diễn ra tại Hà Nội.\nSự kiện mang đến kiến thức, xu hướng và công cụ mới nhất trong lĩnh vực điện toán đám mây và trí tuệ nhân tạo (AI), đồng thời tạo cơ hội để cộng đồng builder tại khu vực phía Nam giao lưu, học hỏi và mở rộng mạng lưới chuyên môn.\nMục tiêu sự kiện Kết nối cộng đồng AWS Builders tại TP.HCM với các chuyên gia và bài phát biểu từ hội nghị chính ở Hà Nội. Chia sẻ những đổi mới trong lĩnh vực Điện toán đám mây, Trí tuệ nhân tạo và Hiện đại hóa ứng dụng. Cung cấp kiến thức thực tiễn và các phương pháp tối ưu trong việc thiết kế hệ thống an toàn, linh hoạt và hiệu quả trên nền tảng AWS. Tạo cơ hội trao đổi, kết nối và hợp tác giữa các kỹ sư, doanh nghiệp và startup trong khu vực. Truyền cảm hứng cho các builder trong việc ứng dụng AI một cách có trách nhiệm và xây dựng kiến trúc hiện đại trong dự án thực tế. Danh sách diễn giả Conor McNamara – Giám đốc điều hành khu vực ASEAN, AWS Alois Reitbauer – Phó Chủ tịch \u0026amp; Giám đốc Truyền bá Kỹ thuật, Dynatrace Erica Liu – Chuyên gia GTM cao cấp, Hiện đại hóa Ứng dụng, AWS Fabrianne Effendi – Kiến trúc sư Giải pháp, Serverless, AWS Jignesh Shah – Giám đốc, Cơ sở dữ liệu mã nguồn mở, AWS Trần Nhật Quang – Trưởng nhóm Kiến trúc sư Giải pháp, AWS Việt Nam Nguyễn Thị Thùy Linh – Quản lý Đối tác cao cấp, AWS Việt Nam (Các diễn giả trình bày trực tiếp tại Hà Nội và được truyền hình trực tiếp đến điểm cầu TP.HCM.)\nNội dung nổi bật 1. Phiên khai mạc (Truyền hình trực tiếp từ Hà Nội) Giới thiệu hành trình chuyển đổi số của Việt Nam và vai trò của AWS trong quá trình này. Ra mắt các sáng kiến khu vực mới của AWS hỗ trợ startup, doanh nghiệp vừa và nhỏ, cũng như giáo dục. Trình bày về Generative AI trên AWS – cách AI tạo ra đổi mới an toàn và có kiểm soát. 2. Phiên thảo luận Builders (Tại điểm cầu TP.HCM) Phân tích Domain-Driven Design (DDD) và Event-Driven Architecture (EDA) trong phát triển ứng dụng cloud-native. Ví dụ thực tế về hiện đại hóa ứng dụng dạng microservices với trọng tâm vào khả năng mở rộng, tách biệt và phục hồi. Giới thiệu Amazon Q Developer – công cụ AI hỗ trợ toàn bộ vòng đời phát triển phần mềm (SDLC). 3. Giao lưu và Kết nối cộng đồng Trao đổi giữa các kỹ sư, nhà phát triển và thành viên cộng đồng AWS. Chia sẻ kinh nghiệm phát triển sự nghiệp trong lĩnh vực Cloud Computing và DevOps. Tìm hiểu về lộ trình chứng chỉ AWS, các chương trình đào tạo và cộng đồng AWS Builders. Bài học rút ra Hiểu rõ nguyên tắc của kiến trúc hiện đại và cách thiết kế hệ thống theo hướng truyền thông sự kiện (event-driven). Nhận thức được tiềm năng của Generative AI và Amazon Q Developer trong việc nâng cao năng suất lập trình. Nắm được các công cụ và khung hiện đại hóa ứng dụng khi di chuyển lên đám mây. Nhận thấy giá trị của hợp tác cộng đồng và học hỏi chia sẻ trong phát triển chuyên môn. Ứng dụng trong công việc Áp dụng DDD và EDA vào các dự án backend hiện tại để cải thiện khả năng mở rộng. Triển khai thử nghiệm AWS Lambda và quy trình serverless cho các bài toán nhẹ, hướng sự kiện. Sử dụng Amazon Q Developer để hỗ trợ lên kế hoạch, refactor và kiểm thử mã nguồn. Khuyến khích đội nhóm áp dụng tư duy thiết kế theo lĩnh vực và định hướng nghiệp vụ (business-first). Trải nghiệm tại sự kiện Trải nghiệm kết nối trực tiếp mượt mà đến hội nghị chính tại Hà Nội. Tiếp thu kiến thức chuyên sâu từ các chuyên gia đầu ngành AWS. Tham gia thảo luận nhóm với cộng đồng builder tại TP.HCM. Sự kiện mang lại kiến thức kỹ thuật thực tiễn, cơ hội kết nối nghề nghiệp, và truyền cảm hứng phát triển chuyên môn. Hình ảnh sự kiện Kết luận:\nSự kiện đã thành công trong việc kết nối cộng đồng AWS khu vực phía Nam với các chuyên gia và lãnh đạo công nghệ hàng đầu.\nTôi đã học được nhiều về hiện đại hóa ứng dụng, phát triển AI có trách nhiệm, và nhận ra tầm quan trọng của tư duy cộng tác giữa đội ngũ kỹ thuật và nghiệp vụ trong các dự án hiện đại.\n"
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/4-eventparticipated/4.2-event2/",
	"title": "Event 2",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nBài thu hoạch “GenAI-powered App-DB Modernization workshop” Mục Đích Của Sự Kiện Chia sẻ best practices trong thiết kế ứng dụng hiện đại Giới thiệu phương pháp DDD và event-driven architecture Hướng dẫn lựa chọn compute services phù hợp Giới thiệu công cụ AI hỗ trợ development lifecycle Danh Sách Diễn Giả Jignesh Shah - Director, Open Source Databases Erica Liu - Sr. GTM Specialist, AppMod Fabrianne Effendi - Assc. Specialist SA, Serverless Amazon Web Services Nội Dung Nổi Bật Đưa ra các ảnh hưởng tiêu cực của kiến trúc ứng dụng cũ Thời gian release sản phẩm lâu → Mất doanh thu/bỏ lỡ cơ hội Hoạt động kém hiệu quả → Mất năng suất, tốn kém chi phí Không tuân thủ các quy định về bảo mật → Mất an ninh, uy tín Chuyển đổi sang kiến trúc ứng dụng mới - Microservice Architecture Chuyển đổi thành hệ thống modular – từng chức năng là một dịch vụ độc lập giao tiếp với nhau qua sự kiện với 3 trụ cột cốt lõi:\nQueue Management: Xử lý tác vụ bất đồng bộ Caching Strategy: Tối ưu performance Message Handling: Giao tiếp linh hoạt giữa services Domain-Driven Design (DDD) Phương pháp 4 bước: Xác định domain events → sắp xếp timeline → identify actors → xác định bounded contexts Case study bookstore: Minh họa cách áp dụng DDD thực tế Context mapping: 7 patterns tích hợp bounded contexts Event-Driven Architecture 3 patterns tích hợp: Publish/Subscribe, Point-to-point, Streaming Lợi ích: Loose coupling, scalability, resilience So sánh sync vs async: Hiểu rõ trade-offs (sự đánh đổi) Compute Evolution Shared Responsibility Model: Từ EC2 → ECS → Fargate → Lambda Serverless benefits: No server management, auto-scaling, pay-for-value Functions vs Containers: Criteria lựa chọn phù hợp Amazon Q Developer SDLC automation: Từ planning đến maintenance Code transformation: Java upgrade, .NET modernization AWS Transform agents: VMware, Mainframe, .NET migration Những Gì Học Được Tư Duy Thiết Kế Business-first approach: Luôn bắt đầu từ business domain, không phải technology Ubiquitous language: Importance của common vocabulary giữa business và tech teams Bounded contexts: Cách identify và manage complexity trong large systems Kiến Trúc Kỹ Thuật Event storming technique: Phương pháp thực tế để mô hình hóa quy trình kinh doanh Sử dụng Event-driven communication thay vì synchronous calls Integration patterns: Hiểu khi nào dùng sync, async, pub/sub, streaming Compute spectrum: Criteria chọn từ VM → containers → serverless Chiến Lược Hiện Đại Hóa Phased approach: Không rush, phải có roadmap rõ ràng 7Rs framework: Nhiều con đường khác nhau tùy thuộc vào đặc điểm của mỗi ứng dụng ROI measurement: Cost reduction + business agility Ứng Dụng Vào Công Việc Áp dụng DDD cho project hiện tại: Event storming sessions với business team Refactor microservices: Sử dụng bounded contexts để identify service boundaries Implement event-driven patterns: Thay thế một số sync calls bằng async messaging Serverless adoption: Pilot AWS Lambda cho một số use cases phù hợp Try Amazon Q Developer: Integrate vào development workflow để boost productivity Trải nghiệm trong event Tham gia workshop “GenAI-powered App-DB Modernization” là một trải nghiệm rất bổ ích, giúp tôi có cái nhìn toàn diện về cách hiện đại hóa ứng dụng và cơ sở dữ liệu bằng các phương pháp và công cụ hiện đại. Một số trải nghiệm nổi bật:\nHọc hỏi từ các diễn giả có chuyên môn cao Các diễn giả đến từ AWS và các tổ chức công nghệ lớn đã chia sẻ best practices trong thiết kế ứng dụng hiện đại. Qua các case study thực tế, tôi hiểu rõ hơn cách áp dụng Domain-Driven Design (DDD) và Event-Driven Architecture vào các project lớn. Trải nghiệm kỹ thuật thực tế Tham gia các phiên trình bày về event storming giúp tôi hình dung cách mô hình hóa quy trình kinh doanh thành các domain events. Học cách phân tách microservices và xác định bounded contexts để quản lý sự phức tạp của hệ thống lớn. Hiểu rõ trade-offs giữa synchronous và asynchronous communication cũng như các pattern tích hợp như pub/sub, point-to-point, streaming. Ứng dụng công cụ hiện đại Trực tiếp tìm hiểu về Amazon Q Developer, công cụ AI hỗ trợ SDLC từ lập kế hoạch đến maintenance. Học cách tự động hóa code transformation và pilot serverless với AWS Lambda, từ đó nâng cao năng suất phát triển. Kết nối và trao đổi Workshop tạo cơ hội trao đổi trực tiếp với các chuyên gia, đồng nghiệp và team business, giúp nâng cao ngôn ngữ chung (ubiquitous language) giữa business và tech. Qua các ví dụ thực tế, tôi nhận ra tầm quan trọng của business-first approach, luôn bắt đầu từ nhu cầu kinh doanh thay vì chỉ tập trung vào công nghệ. Bài học rút ra Việc áp dụng DDD và event-driven patterns giúp giảm coupling, tăng scalability và resilience cho hệ thống. Chiến lược hiện đại hóa cần phased approach và đo lường ROI, không nên vội vàng chuyển đổi toàn bộ hệ thống. Các công cụ AI như Amazon Q Developer có thể boost productivity nếu được tích hợp vào workflow phát triển hiện tại. Một số hình ảnh khi tham gia sự kiện Thêm các hình ảnh của các bạn tại đây Tổng thể, sự kiện không chỉ cung cấp kiến thức kỹ thuật mà còn giúp tôi thay đổi cách tư duy về thiết kế ứng dụng, hiện đại hóa hệ thống và phối hợp hiệu quả hơn giữa các team.\n"
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/5-workshop/5.1-workshop-overview/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Giới thiệu về VPC Endpoint Điểm cuối VPC (endpoint) là thiết bị ảo. Chúng là các thành phần VPC có thể mở rộng theo chiều ngang, dự phòng và có tính sẵn sàng cao. Chúng cho phép giao tiếp giữa tài nguyên điện toán của bạn và dịch vụ AWS mà không gây ra rủi ro về tính sẵn sàng. Tài nguyên điện toán đang chạy trong VPC có thể truy cập Amazon S3 bằng cách sử dụng điểm cuối Gateway. Interface Endpoint PrivateLink có thể được sử dụng bởi tài nguyên chạy trong VPC hoặc tại TTDL. Tổng quan về workshop Trong workshop này, bạn sẽ sử dụng hai VPC.\n\u0026ldquo;VPC Cloud\u0026rdquo; dành cho các tài nguyên cloud như Gateway endpoint và EC2 instance để kiểm tra. \u0026ldquo;VPC On-Prem\u0026rdquo; mô phỏng môi trường truyền thống như nhà máy hoặc trung tâm dữ liệu của công ty. Một EC2 Instance chạy phần mềm StrongSwan VPN đã được triển khai trong \u0026ldquo;VPC On-prem\u0026rdquo; và được cấu hình tự động để thiết lập đường hầm VPN Site-to-Site với AWS Transit Gateway. VPN này mô phỏng kết nối từ một vị trí tại TTDL (on-prem) với AWS cloud. Để giảm thiểu chi phí, chỉ một phiên bản VPN được cung cấp để hỗ trợ workshop này. Khi lập kế hoạch kết nối VPN cho production workloads của bạn, AWS khuyên bạn nên sử dụng nhiều thiết bị VPN để có tính sẵn sàng cao. "
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/1-worklog/",
	"title": "Nhật ký công việc",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nTrong trang này bạn sẽ cần giới thiệu worklog của bạn như thế nào? Bạn hoàn thành chương trình trong vòng bao nhiêu tuần? Bạn đã làm gì trong các tuần đó?\nThông thường và cũng là tiêu chuẩn, một worklog được thực hiện trong khoảng 3 tháng (trong suốt thời gian thực tập) với nội dung các tuần như sau:\nTuần 1: Làm quen với AWS và các dịch vụ cơ bản trong AWS\nTuần 2: Làm công việc A\u0026hellip;\nTuần 3: Làm công việc B\u0026hellip;\nTuần 4: Làm công việc C\u0026hellip;\nTuần 5: Làm công việc D\u0026hellip;\nTuần 6: Làm công việc E\u0026hellip;\nTuần 7: Làm công việc G\u0026hellip;\nTuần 8: Làm công việc H\u0026hellip;\nTuần 9: Làm công việc I\u0026hellip;\nTuần 10: Làm công việc L\u0026hellip;\nTuần 11: Làm công việc M\u0026hellip;\nTuần 12: Làm công việc N\u0026hellip;\n"
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/5-workshop/5.3-s3-vpc/5.3.1-create-gwe/",
	"title": "Tạo một Gateway Endpoint",
	"tags": [],
	"description": "",
	"content": " Mở Amazon VPC console Trong thanh điều hướng, chọn Endpoints, click Create Endpoint: Bạn sẽ thấy 6 điểm cuối VPC hiện có hỗ trợ AWS Systems Manager (SSM). Các điểm cuối này được Mẫu CloudFormation triển khai tự động cho workshop này.\nTrong Create endpoint console: Đặt tên cho endpoint: s3-gwe Trong service category, chọn aws services Trong Services, gõ \u0026ldquo;s3\u0026rdquo; trong hộp tìm kiếm và chọn dịch vụ với loại gateway Đối với VPC, chọn VPC Cloud từ drop-down menu. Đối với Route tables, chọn bảng định tuyến mà đã liên kết với 2 subnets (lưu ý: đây không phải là bảng định tuyến chính cho VPC mà là bảng định tuyến thứ hai do CloudFormation tạo). Đối với Policy, để tùy chọn mặc định là Full access để cho phép toàn quyền truy cập vào dịch vụ. Bạn sẽ triển khai VPC endpoint policy trong phần sau để chứng minh việc hạn chế quyền truy cập vào S3 bucket dựa trên các policies. Không thêm tag vào VPC endpoint. Click Create endpoint, click x sau khi nhận được thông báo tạo thành công. "
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/1-worklog/1.1-week1/",
	"title": "Worklog Tuần 1",
	"tags": [],
	"description": "",
	"content": "Mục tiêu tuần 1: Kết nối và làm quen với các thành viên của First Cloud Journey. Hiểu cơ bản về điện toán đám mây và AWS Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Mô-đun 01-01: Điện Toán Đám Mây Là Gì? - Mô-đun 01-02: Điều Gì Làm Nên Sự Khác Biệt Của AWS? - Mô-đun 01-03: Bắt Đầu Hành Trình Lên Mây Như Thế Nào. 08/09/2025 08/09/2025 https://www.youtube.com/watch?v=AQlsd0nWdZk\u0026list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026index=1/ 3 - Mô-đun 01-04: Hạ Tầng Toàn Cầu Của AWS - Mô-đun 01-05: Công Cụ Quản Lý AWS Service - Mô-đun 01-06: Tối Ưu Hóa Chi Phí Trên AWS và Làm Việc Với AWS Support - Hiểu về các vùng AWS, vùng khả dụng, dịch vụ cốt lõi (EC2, S3, RDS). 09/09/2025 09/09/2025 https://www.youtube.com/watch?v=AQlsd0nWdZk\u0026list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026index=1/ 4 - Mô-đun 01-07: Thực Hành Và Nghiên Cứu Bổ Sung - Tìm hiểu về AWS Free Tier, AWS Console và AWS CLI. 10/09/2025 10/09/2025 https://www.youtube.com/watch?v=AQlsd0nWdZk\u0026list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026index=1/ 5 - Thực hành Lab 01-01: Tạo Tài Khoản AWS. - Thực hành: + Tạo tài khoản AWS + Cấu hình cài đặt thanh toán, kiểm tra trạng thái Free Tier. 11/09/2025 11/09/2025 https://www.youtube.com/watch?v=AQlsd0nWdZk\u0026list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026index=1/ 6 - Thực hành Lab 01-02: Thiết lập với Thiết bị MFA ảo - Thực hành: + Thiết lập với Thiết bị MFA ảo - Tìm hiểu MFA là gì và tại sao nó lại quan trọng. 12/09/2025 12/09/2025 https://www.youtube.com/watch?v=AQlsd0nWdZk\u0026list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026index=1/ 7 - Thực hành Lab 01-03: Tạo nhóm quản trị và người dùng quản trị. - Thực hành: + Tạo nhóm quản trị và người dùng quản trị - Giải thích sự khác biệt giữa tài khoản root và người dùng IAM 13/09/2025 13/09/2025 https://www.youtube.com/watch?v=AQlsd0nWdZk\u0026list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026index=1/ CN - Viết Nhật ký công việc Tuần 1 - Lên lịch công việc cho tuần 2 - Bắt đầu động não ý tưởng cho Đề xuất dự án 14/09/2025 14/09/2025 https://www.youtube.com/watch?v=AQlsd0nWdZk\u0026list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026index=1/ Kết quả đạt được tuần 1: Làm quen với các thành viên trong FCJ Tạo được tài khoản Free tier AWS "
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/1-worklog/1.2-week2/",
	"title": "Worklog Tuần 2",
	"tags": [],
	"description": "",
	"content": "Mục tiêu tuần 2: Tìm hiểu về VPC trong AWS Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Tìm hiểu về khái niệm VPC - Module 02-01 - AWS Virtual Private Cloud 15/09/2025 15/09/2025 https://cloudjourney.awsstudygroup.com/ https://www.youtube.com/watch?v=AQlsd0nWdZk\u0026list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026index=1/ 3 - Tìm hiểu VPC Secuity và Multi-VPC features - Module 02-02 - VPC Security and Multi-VPC features 16/09/2025 16/09/2025 https://cloudjourney.awsstudygroup.com/ https://www.youtube.com/watch?v=AQlsd0nWdZk\u0026list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026index=1/ 4 - Tìm hiểu về VPN, DirectConnect, LoadBalancer, ExtraResources trong việc kết môi trường on-premise và cloud - Module 02-03 - VPN - DirectConnect - LoadBalancer - ExtraResources 17/09/2025 17/09/2025 https://cloudjourney.awsstudygroup.com/ https://www.youtube.com/watch?v=AQlsd0nWdZk\u0026list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026index=1/ 5 - Tham gia sự kiện Vietnam Cloud Day 2025 - Bắt đầu làm lab tạo VPC 18/09/2025 18/09/2025 https://cloudjourney.awsstudygroup.com/ https://www.youtube.com/watch?v=AQlsd0nWdZk\u0026list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026index=1/ 6 - Làm lab khởi tạo EC2 19/09/2025 19/09/2025 https://cloudjourney.awsstudygroup.com/ https://www.youtube.com/watch?v=AQlsd0nWdZk\u0026list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026index=1/ 7 - Luyện tập thực hành lại các bài lab 20/09/2025 20/09/2025 https://cloudjourney.awsstudygroup.com/ https://www.youtube.com/watch?v=AQlsd0nWdZk\u0026list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026index=1/ CN - Viết Nhật ký công việc cho tuần 2 - Lên kế hoạch học tập cho tuần 3 21/09/2025 21/09/2025 https://cloudjourney.awsstudygroup.com/ https://www.youtube.com/watch?v=AQlsd0nWdZk\u0026list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026index=1/ Kết quả đạt được tuần 2: Nắm vững kiến ​​thức cơ bản về các khái niệm VPC (Mô-đun 02-01). Tìm hiểu về Bảo mật VPC và các tính năng Đa VPC (Mô-đun 02-02). Nghiên cứu VPN, DirectConnect, LoadBalancer và ExtraResources cho kết nối lai (Mô-đun 02-03). Tham dự Ngày hội Đám mây Việt Nam 2025 và bắt đầu thực hành tạo VPC. Hoàn thành thành công thực hành khởi chạy phiên bản EC2. Thực hành và lặp lại các bài tập thực hành để có kinh nghiệm thực hành tốt hơn. Hoàn thành nhật ký hàng tuần và thiết lập bài tập tự đánh giá cho Tuần 2. "
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/1-worklog/1.3-week3/",
	"title": "Worklog Tuần 3",
	"tags": [],
	"description": "",
	"content": "Mục tiêu tuần 3: Nắm vững kiến thức cơ bản về dịch vụ Amazon EC2: các loại instance, AMI, Backup, Key Pair, EBS, Instance Store, User Data, Meta Data. Hiểu cơ chế hoạt động và lợi ích của EC2 Auto Scaling, đồng thời có cái nhìn tổng quan về các dịch vụ liên quan như EFS, FSx, Lightsail, MGN. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Tìm hiểu về các loại EC2 instance type và chức năng của chúng - Module 03-01-01 - Amazon Elastic Compute Cloud ( EC2 ) - Instance type 22/09/2025 22/09/2025 https://cloudjourney.awsstudygroup.com/ https://www.youtube.com/watch?v=AQlsd0nWdZk\u0026list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026index=1/ 3 - Nắm rõ các khái niệm AMI / Backup / Key Pair và khái niệm về Elastic Block Store (EBS) - Module 03-01-02 - Amazon EC2 - AMI / Backup / Key Pair - Module 03-01-03 - Amazon EC2 - Elastic block store 23/09/2025 23/09/2025 https://cloudjourney.awsstudygroup.com/ https://www.youtube.com/watch?v=AQlsd0nWdZk\u0026list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026index=1/ 4 - Tìm hiểu các tính năng quan trọng khác của EC2 như Instance Store, User Data, Meta Data - Module 03-01-04 - Amazon EC2 - Instance store - Module 03-01-05 - Amazon EC2 - User data - Module 03-01-06 - Amazon EC2 - Meta data 24/09/2025 24/09/2025 https://cloudjourney.awsstudygroup.com/ https://www.youtube.com/watch?v=AQlsd0nWdZk\u0026list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026index=1/ 5 - Tìm hiểu EC2 Auto Scaling và nắm rõ cấu trúc - Module 03-01-07 - Amazon EC2 - EC2 auto scaling - Module-03-02 - EC2 Autoscaling - EFS/FSx - Lightsail - MGN 25/09/2025 25/09/2025 https://cloudjourney.awsstudygroup.com/ https://www.youtube.com/watch?v=AQlsd0nWdZk\u0026list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026index=1/ 6 - Thực hành các bài lab liên quan 26/09/2025 26/09/2025 https://cloudjourney.awsstudygroup.com/ 7 - Thực hành các bài lab liên quan 27/09/2025 27/09/2025 https://cloudjourney.awsstudygroup.com/ CN - Viết nhật ký công việc tuần 3 - Lên kế hoạch học tập tuần 4 28/09/2025 28/09/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 3: Hiểu rõ về các loại EC2 instance type, nắm được mục đích sử dụng từng loại trong các tình huống khác nhau. Nắm vững khái niệm AMI, Backup, Key Pair và Elastic Block Store (EBS), biết cách tạo và quản lý. Làm quen với các tính năng mở rộng của EC2: Instance Store, User Data, Meta Data và ứng dụng thực tế của chúng. Hiểu cơ chế hoạt động và lợi ích của EC2 Auto Scaling, đồng thời có cái nhìn tổng quan về các dịch vụ liên quan như EFS, FSx, Lightsail, MGN. Hoàn thành các bài lab thực hành, củng cố kiến thức đã học và rèn kỹ năng thao tác trên AWS Console \u0026amp; CLI. Kết nối và trao đổi được với các thành viên trong First Cloud Journey, tạo nền tảng hỗ trợ học tập nhóm. Viết nhật ký công việc và lập kế hoạch học tập cho tuần 4. "
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/1-worklog/1.4-week4/",
	"title": "Worklog Tuần 4",
	"tags": [],
	"description": "",
	"content": "Mục tiêu tuần 4: Nắm vững kiến thức về dịch vụ lưu trữ trên AWS: các loại dịch vụ, cách quản lý dữ liệu, bảo mật và tối ưu hiệu suất. Hiểu cơ chế hoạt động của S3, Glacier, Snow Family, Storage Gateway, Backup và cách ứng dụng trong thực tế. Thực hành các bài lab liên quan để củng cố kiến thức và rèn kỹ năng thao tác trên AWS Console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Học Module 04-01 - Dịch Vụ Lưu Trữ Trên AWS 29/09/2025 29/09/2025 https://cloudjourney.awsstudygroup.com/ 3 - Học Module 04-02 - Amazon S3: Access Point, Storage Class 30/09/2025 30/09/2025 https://cloudjourney.awsstudygroup.com/ 4 - Học Module 04-03 - S3 Static Website \u0026amp; CORS, Control Access, Object Key \u0026amp; Performance, Glacier 01/09/2025 01/09/2025 https://cloudjourney.awsstudygroup.com/ 5 - Học Module 04-04 - Snow Family, Storage Gateway, Backup 02/09/2025 02/09/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành các bài lab liên quan đến Module 04-01 ~ 04-04 03/09/2025 03/09/2025 https://cloudjourney.awsstudygroup.com/ 7 - Thực hành lab tiếp tục - Dịch 1 bài blog liên quan 04/09/2025 04/09/2025 https://cloudjourney.awsstudygroup.com/ CN - Dịch 2 bài blog còn lại - Viết nhật ký công việc tuần 4 - Lên kế hoạch học tập tuần 5 05/09/2025 05/09/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 4: Hiểu rõ về các dịch vụ lưu trữ trên AWS, nắm được chức năng và ứng dụng thực tế của từng dịch vụ. Nắm vững kiến thức về Amazon S3: Access Point, Storage Class, Static Website, CORS, Object Key, Performance, Glacier. Làm quen với Snow Family, Storage Gateway, và Backup, biết cách triển khai và quản lý. Hoàn thành các bài lab thực hành, củng cố kỹ năng thao tác trên AWS Console \u0026amp; CLI. Dịch thành công các bài blog, nâng cao kỹ năng đọc hiểu và tổng hợp kiến thức. Viết nhật ký công việc và lập kế hoạch học tập cho tuần 5. "
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/1-worklog/1.5-week5/",
	"title": "Worklog Tuần 5",
	"tags": [],
	"description": "",
	"content": "Mục tiêu tuần 5: Nắm vững kiến thức về bảo mật và quản lý truy cập trên AWS. Hiểu rõ mô hình Shared Responsibility Model, vai trò và trách nhiệm giữa AWS và người dùng. Làm quen với các dịch vụ IAM, Cognito, AWS Organization, Identity Center, KMS, Security Hub và ứng dụng vào quản lý tài nguyên an toàn. Thực hành các bài lab hands-on và nghiên cứu mở rộng để củng cố kỹ năng bảo mật. Hoàn thành bài proposal cho project nhóm vào cuối tuần. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Học Module 05-01 - Shared Responsibility Model 06/10/2025 06/10/2025 https://cloudjourney.awsstudygroup.com/ 3 - Học Module 05-02 - Amazon Identity and Access Management (IAM) 07/10/2025 07/10/2025 https://cloudjourney.awsstudygroup.com/ 4 - Học Module 05-03 - Amazon Cognito - Học Module 05-04 - AWS Organization 08/10/2025 08/10/2025 https://cloudjourney.awsstudygroup.com/ 5 - Học Module 05-05 - AWS Identity Center - Học Module 05-06 - Amazon Key Management Service (KMS) 09/10/2025 09/10/2025 https://cloudjourney.awsstudygroup.com/ 6 - Học Module 05-07 - AWS Security Hub - Học Module 05-08 - Hands-on \u0026amp; Additional Research 10/10/2025 10/10/2025 https://cloudjourney.awsstudygroup.com/ 7 - Thực hành các bài lab liên quan của tuần 5 11/10/2025 11/10/2025 https://cloudjourney.awsstudygroup.com/ CN - Hoàn thiện bài Proposal cho Project nhóm - Viết nhật ký công việc tuần 5 - Lên kế hoạch học tập tuần 6 12/10/2025 12/10/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 5: Hiểu rõ mô hình Shared Responsibility Model và phân biệt trách nhiệm giữa AWS và người dùng. Thành thạo kiến thức về AWS IAM: quản lý user, group, role, policy, MFA và best practices. Làm quen với Amazon Cognito và AWS Identity Center để quản lý danh tính người dùng tập trung. Hiểu cách tổ chức tài khoản với AWS Organization, quản lý quyền hạn theo OU. Nắm vững AWS KMS: quản lý khóa mã hóa, rotation, và tích hợp với các dịch vụ khác. Biết cách giám sát và đánh giá bảo mật thông qua AWS Security Hub. Hoàn thành các bài lab hands-on và nghiên cứu mở rộng về bảo mật tài nguyên AWS. Hoàn thành proposal cho project nhóm, tổng hợp được ý tưởng, phạm vi, và kế hoạch triển khai. "
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/1-worklog/1.6-week6/",
	"title": "Worklog Tuần 6",
	"tags": [],
	"description": "",
	"content": "Mục tiêu tuần 6: Hiểu rõ kiến trúc và nguyên lý hoạt động của Microservice Architecture. Nắm vững cách giao tiếp giữa các service thông qua gRPC và Apache Kafka. Ôn tập tổng hợp kiến thức để chuẩn bị cho kỳ kiểm tra giữa kỳ. Thiết kế bản vẽ cấu trúc hệ thống project nhóm, thể hiện luồng giao tiếp giữa các service. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Ôn lại kiến trúc Monolithic và so sánh với Microservice\n- Học nguyên tắc thiết kế Microservice cơ bản 13/10/2025 13/10/2025 https://cloudjourney.awsstudygroup.com/ 3 - Học gRPC: khái niệm, cơ chế hoạt động, Protocol Buffers 14/10/2025 14/10/2025 https://cloudjourney.awsstudygroup.com/ 4 - - Học Apache Kafka 15/10/2025 15/10/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu cách tích hợp gRPC và Kafka trong hệ thống microservice 16/10/2025 16/10/2025 https://cloudjourney.awsstudygroup.com/ 6 - Ôn tập tổng hợp kiến thức từ tuần 1–6 17/10/2025 17/10/2025 https://cloudjourney.awsstudygroup.com/ 7 - Thiết kế **bản vẽ cấu trúc hệ thống project nhóm 18/10/2025 18/10/2025 https://cloudjourney.awsstudygroup.com/ CN - Hoàn thiện bản vẽ kiến trúc hệ thống\n- Viết nhật ký công việc tuần 6 19/10/2025 19/10/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 6: Hiểu rõ sự khác biệt giữa Monolithic và Microservice Architecture. Tìm hiểu kiến thức về gRPC và Kafka Biết cách tích hợp gRPC và Kafka trong hệ thống microservice. Hoàn thành bản vẽ cấu trúc hệ thống project nhóm Sẵn sàng cho kỳ kiểm tra giữa kỳ. "
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/1-worklog/1.7-week7/",
	"title": "Worklog Tuần 7",
	"tags": [],
	"description": "",
	"content": "Mục tiêu tuần 7: Tìm hiểu về AWS Lambda Tìm hiểu AWS CLI và cách deploy java function lên Lambda bằng AWS CLI Tìm hiểu cách API Gateway và Lambda làm việc với nhau Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Tìm hiểu tổng quan về AWS Lambda: khái niệm, kiến trúc hoạt động, ưu điểm của mô hình serverless và cách Lambda thực thi mã nguồn. 20/10/2025 20/10/2025 https://cloudjourney.awsstudygroup.com/ 3 - Nghiên cứu AWS CLI: chức năng, cách cài đặt và cấu hình truy cập tài khoản AWS bằng IAM User; tìm hiểu cú pháp các lệnh cơ bản. 21/10/2025 21/10/2025 https://cloudjourney.awsstudygroup.com/ 4 - Thực hành cài đặt AWS CLI trên máy cá nhân, cấu hình thông tin xác thực và thử nghiệm một số lệnh quản lý tài nguyên (S3, EC2, Lambda). 22/10/2025 22/10/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu quy trình triển khai Java Function lên AWS Lambda: chuẩn bị project Maven, đóng gói file .jar, tạo và upload function bằng AWS CLI. 23/10/2025 23/10/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành triển khai Java Function lên Lambda bằng AWS CLI, gán quyền IAM phù hợp và kiểm thử hoạt động của function. 24/10/2025 24/10/2025 https://cloudjourney.awsstudygroup.com/ 7 - Tìm hiểu cách API Gateway kết nối với AWS Lambda để xây dựng API backend; cấu hình endpoint và kiểm thử gọi API. 25/10/2025 25/10/2025 https://cloudjourney.awsstudygroup.com/ CN - Tổng hợp kiến thức đã học: mối quan hệ giữa Lambda – API Gateway – AWS CLI, ghi lại quy trình triển khai và chuẩn bị báo cáo tuần. - Viết nhật ký công việc tuần 7 26/10/2025 26/10/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 7: 1. Hiểu rõ về AWS Lambda Nắm được khái niệm và vai trò của AWS Lambda trong mô hình serverless. Hiểu cơ chế hoạt động của Lambda: quá trình kích hoạt (trigger), thực thi function và trả kết quả. Phân biệt sự khác nhau giữa Lambda và EC2 về: Quản lý hạ tầng Chi phí sử dụng Khả năng mở rộng và tính linh hoạt. 2. Nắm được cách sử dụng AWS CLI Cài đặt và cấu hình AWS CLI thành công trên máy cá nhân bằng IAM User. Thực hành các lệnh cơ bản: Liệt kê bucket S3. Tạo và xem thông tin Lambda function. Quản lý các tài nguyên cơ bản trên AWS. Hiểu cách AWS CLI gửi yêu cầu API và cơ chế xác thực bằng Access Key/Secret Key. 3. Thực hành triển khai Java Function lên AWS Lambda bằng AWS CLI Xây dựng project Java sử dụng Maven, tạo class handler và đóng gói thành file .jar. Dùng lệnh aws lambda create-function để upload và triển khai function. Gán IAM Role phù hợp để Lambda có quyền thực thi. Kiểm tra hoạt động của function bằng lệnh: aws lambda invoke --function-name \u0026lt;FunctionName\u0026gt; output.txt "
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/1-worklog/1.8-week8/",
	"title": "Worklog Tuần 8",
	"tags": [],
	"description": "",
	"content": "Mục tiêu tuần 8: Hoàn thành proposal. Ôn tập các kiến thức cần thiết chuẩn bị cho kì kiểm tra giữa kì. Bổ sung các kiến thức còn thiếu. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Hoàn thành Proposal của nhóm .\n- Ôn tập các kiến thức về thiết kế bảo mật: + IAM, MFA, SCP, Encryption (KMS, TLS/ACM), Security Groups, NACLs, GuardDuty, Shield, WAF, Secrets Manager 27/10/2025 27/10/2025 https://cloudjourney.awsstudygroup.com/ 3 - Ôn tập cách thiết kế kiến trúc linh hoạt và bền vững: + Multi-AZ, Multi-Region, DR Strategies, Auto Scaling, Route 53, Load Balancing, Backup \u0026amp; Restore 28/10/2025 28/10/2025 https://cloudjourney.awsstudygroup.com/ 4 - Ôn tập kiến thức về việc thiết kế hệ thống hiệu năng cao: + EC2 Auto Scaling, Lambda, Fargate, S3, EFS, EBS, Caching, CloudFront, Global Accelerator 29/10/2025 29/10/025 https://cloudjourney.awsstudygroup.com/ 5 - Ôn tập cách để thiết kế hệ thống tối ưu chi phí: + Cost Explorer, Budgets, Savings Plans, Lifecycle Policies, NAT Gateway Optimization, Storage Tiering 30/10/2025 30/10/2025 https://cloudjourney.awsstudygroup.com/ 6 - Tham gia kỳ thi đánh giá giữa kì của FCJ. 31/10/2025 31/10/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 8: Hoàn thành Proposal của nhóm, đảm bảo nội dung rõ ràng, bố cục hợp lý và bám sát yêu cầu của đề tài.\nÔn tập và củng cố kiến thức về thiết kế bảo mật trong AWS, bao gồm: IAM, MFA, SCP, Encryption (KMS, TLS/ACM), Security Groups, NACLs, GuardDuty, Shield, WAF và Secrets Manager.\nNắm vững các nguyên tắc thiết kế kiến trúc linh hoạt và bền vững, hiểu rõ vai trò của Multi-AZ, Multi-Region, DR Strategies, Auto Scaling, Route 53, Load Balancing, và Backup \u0026amp; Restore trong việc tăng tính sẵn sàng và khả năng phục hồi của hệ thống.\nÔn tập kiến thức về thiết kế hệ thống hiệu năng cao, đặc biệt là cách kết hợp EC2 Auto Scaling, Lambda, Fargate, S3, EFS, EBS, Caching, CloudFront và Global Accelerator để tối ưu tốc độ xử lý và phân phối nội dung.\nCủng cố kiến thức về tối ưu chi phí vận hành hệ thống, bao gồm việc sử dụng Cost Explorer, Budgets, Savings Plans, Lifecycle Policies, NAT Gateway Optimization và Storage Tiering.\nHoàn thành kỳ thi đánh giá giữa kỳ của FCJ, vận dụng hiệu quả các kiến thức đã học trong quá trình ôn tập để làm bài.\n"
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/1-worklog/1.9-week9/",
	"title": "Worklog Tuần 9",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 9: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 9: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/2-proposal/",
	"title": "Bản đề xuất",
	"tags": [],
	"description": "",
	"content": "Hệ thống Ghi nhận Vi phạm Nồng độ cồn qua IoT Một giải pháp AWS Serverless An toàn với Xác thực Sinh trắc học và DevSecOps 1. Tóm tắt Dự án (Executive Summary) Dự án này xây dựng một nền tảng IoT-Cloud toàn diện để thực thi và ghi nhận các quy định về nồng độ cồn. Hệ thống được thiết kế với hai thành phần rõ rệt:\nThiết bị (Edge) Chuyên dụng: Dành cho nhân viên vận hành, yêu cầu xác thực vân tay (hybrid) trước khi cho phép sử dụng, đối chiếu SlotID vân tay với \u0026ldquo;pool dữ liệu\u0026rdquo; (DynamoDB) trên Cloud để mở khóa. Cổng Tra cứu (Web) Công cộng: Một trang web công khai, cho phép bất kỳ ai cũng có thể truy cập để xem dashboard và tự tra cứu lịch sử vi phạm bằng CCCD. Backend được xây dựng hoàn toàn serverless. Quy trình phát triển frontend được tự động hóa bằng AWS Amplify làm framework CI/CD, trong khi hạ tầng backend được quản lý bằng Terraform (IaC) và triển khai qua pipeline AWS CodePipeline, tuân thủ DevSecOps.\n2. Bối cảnh và Giải pháp Vấn đề đặt ra Quy trình kiểm tra thủ công hiện tại tồn tại nhiều điểm yếu nghiêm trọng về mặt xác thực, minh bạch và quản lý dữ liệu.\nThiếu Tính Xác thực (Accountability): Hệ thống không có cơ chế để xác thực danh tính của nhân viên vận hành (ai là người kiểm tra?). Điều này dẫn đến rủi ro về lạm dụng thiết bị, sai sót trong quy trình và thiếu trách nhiệm giải trình khi có sự cố hoặc khiếu nại xảy ra. Thiếu Tính Minh bạch (Transparency): Người dân sau khi bị kiểm tra không có một kênh chính thức, nhanh chóng và đáng tin cậy để tra cứu lại kết quả vi phạm của chính mình. Dữ liệu Phân tán và Không thể Tra cứu: Dữ liệu vi phạm (nếu có được lưu) thường nằm phân tán trên sổ sách hoặc các file excel rời rạc, không được quản lý tập trung. Điều này khiến cho việc tra cứu lịch sử vi phạm của một cá nhân (ví dụ: theo CCCD) trở nên bất khả thi hoặc cực kỳ tốn thời gian, gây lãng phí nguồn lực và làm giảm lòng tin của công chúng. Giải pháp đề xuất Hệ thống giải quyết vấn đề bằng cách:\nXác thực người vận hành: Sử dụng cảm biến vân tay và AWS IoT Core để đảm bảo chỉ nhân viên được cấp phép mới có thể mở máy. Lưu vết (Auditing): Mọi sự vụ vi phạm đều được tự động gắn ID của nhân viên vận hành. Tập trung hóa dữ liệu: Dữ liệu vi phạm được gửi qua IoT Core, xử lý bởi Lambda và lưu trên DynamoDB. Cổng tra cứu công cộng: Website công khai được triển khai bằng Amplify + CloudFront, có API được bảo vệ bởi AWS WAF. Tự động hóa phân tách CI/CD: Frontend CI/CD qua Amplify (kết nối GitHub). Backend CI/CD qua CodePipeline + Terraform. Lợi ích đầu tư:\nTăng minh bạch, giảm sai sót con người. Triển khai nhanh, chi phí thấp (~14–16 USD/tháng). Áp dụng DevSecOps hiện đại. 3. Kiến trúc Giải pháp Dịch vụ AWS được sử dụng Nhóm Dịch vụ Mục đích IoT \u0026amp; Ingestion AWS IoT Core Nhận và điều phối dữ liệu từ thiết bị Compute AWS Lambda 4 hàm: Authorize, ProcessViolation, GetDashboard, SearchByCCCD Database Amazon DynamoDB 2 bảng: DeviceOfficerMap_Pool, ViolationsDB (2 GSI) API Amazon API Gateway Cung cấp endpoint REST công cộng Security AWS WAF Bảo vệ API và web Frontend Hosting S3 + CloudFront + Route 53 Lưu trữ và phân phối web Frontend Framework AWS Amplify CI/CD và build frontend DevOps Backend CodePipeline + CodeBuild + Terraform Tự động hóa backend IaC Monitoring CloudWatch Giám sát toàn hệ thống Thiết bị phần cứng (Edge) ESP32, MQ-3 (Cảm biến cồn) MAX30102 (Cảm biến tim/oxy) AS608 (Cảm biến vân tay) Keypad 4x4, LCD 1602 Luồng xử lý chính Xác thực (Hybrid): Nhân viên quét vân tay → SlotID → Gửi lên auth/request → IoT Core → Lambda AuthorizeFunction → Truy vấn DynamoDB → Lệnh unlock/deny. Ghi vi phạm: Khi máy mở khóa → Đo nồng độ cồn → Nếu vượt ngưỡng → Nhập CCCD → Gửi violations/new → IoT Core → Lambda ProcessViolationFunction → Lưu DynamoDB. Giao diện Web công cộng: SPA React/Vue sử dụng Amplify libraries gọi API Gateway. 4. Kế hoạch Triển khai Kỹ thuật Giai đoạn Thời gian Nhiệm vụ chính Thiết kế \u0026amp; IaC Tuần 1–2 Hoàn thiện kiến trúc, viết Terraform Firmware (ESP32) Tuần 3–4 Xây dựng luồng xác thực \u0026amp; ghi vi phạm Backend Tuần 5–7 Viết Lambda, cấu hình IoT \u0026amp; API Gateway Frontend Tuần 8–9 Xây dựng giao diện web (React + Amplify) CI/CD \u0026amp; Bảo mật Tuần 10–12 Thiết lập pipeline, WAF, CloudWatch 5. Timeline \u0026amp; Milestones Tháng Giai đoạn Milestone Tháng 1 Thiết kế + Firmware ESP32 xác thực nhân viên và gửi vi phạm mẫu Tháng 2 Backend + API API hoạt động và trả dữ liệu qua trình duyệt Tháng 3 Frontend + CI/CD Web công cộng hoạt động, deploy tự động 6. Ước tính Ngân sách (Tháng) Dịch vụ AWS: Dịch vụ Chi phí (USD) Ghi chú AWS WAF 6.00 1 Web ACL + Rule Route 53 0.50 1 Hosted Zone CodePipeline 1.00 Pipeline backend Amplify Build + Host 2.72 Build 100 phút + 20GB transfer CloudWatch 2.80 5GB log + 3 alarms IoT Core 1.00 10.000 tin nhắn CodeBuild 0.00 Trong hạn miễn phí Lambda 0.22 25.000 lượt gọi API Gateway 0.07 20.000 request DynamoDB 0.02 On-demand Tổng cộng: ~14.33 USD/tháng (~14–16 USD thực tế)\nPhần cứng: 25$ (ESP32 và các sensor) 7. Đánh giá Rủi ro Rủi ro Mức độ Ảnh hưởng Khả năng Biện pháp giảm thiểu Bảo mật PII (CCCD) Cực cao Cao Thêm xác thực 2 bước hoặc ẩn 4 số CCCD Mất kết nối mạng Cao Trung bình ESP32 lưu tạm log và đồng bộ lại khi có mạng Lỗi cảm biến Cao Trung bình Hiệu chuẩn định kỳ, lọc nhiễu tín hiệu Lỗi CI/CD Trung bình Trung bình Áp dụng staging + code review cho IaC 8. Kết quả Dự kiến Kỹ thuật: Hệ thống IoT–Cloud full-stack, tích hợp sinh trắc học, backend serverless và pipeline DevSecOps hoàn chỉnh. Ứng dụng: Tăng tính minh bạch và trách nhiệm cho lực lượng kiểm tra. Học thuật: Đồ án tốt nghiệp thể hiện khả năng làm chủ AWS Cloud, IoT và DevOps hiện đại. "
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/5-workshop/5.2-prerequiste/",
	"title": "Các bước chuẩn bị",
	"tags": [],
	"description": "",
	"content": "IAM permissions Gắn IAM permission policy sau vào tài khoản aws user của bạn để triển khai và dọn dẹp tài nguyên trong workshop này.\n{ \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;, \u0026#34;Statement\u0026#34;: [ { \u0026#34;Sid\u0026#34;: \u0026#34;VisualEditor0\u0026#34;, \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, \u0026#34;Action\u0026#34;: [ \u0026#34;cloudformation:*\u0026#34;, \u0026#34;cloudwatch:*\u0026#34;, \u0026#34;ec2:AcceptTransitGatewayPeeringAttachment\u0026#34;, \u0026#34;ec2:AcceptTransitGatewayVpcAttachment\u0026#34;, \u0026#34;ec2:AllocateAddress\u0026#34;, \u0026#34;ec2:AssociateAddress\u0026#34;, \u0026#34;ec2:AssociateIamInstanceProfile\u0026#34;, \u0026#34;ec2:AssociateRouteTable\u0026#34;, \u0026#34;ec2:AssociateSubnetCidrBlock\u0026#34;, \u0026#34;ec2:AssociateTransitGatewayRouteTable\u0026#34;, \u0026#34;ec2:AssociateVpcCidrBlock\u0026#34;, \u0026#34;ec2:AttachInternetGateway\u0026#34;, \u0026#34;ec2:AttachNetworkInterface\u0026#34;, \u0026#34;ec2:AttachVolume\u0026#34;, \u0026#34;ec2:AttachVpnGateway\u0026#34;, \u0026#34;ec2:AuthorizeSecurityGroupEgress\u0026#34;, \u0026#34;ec2:AuthorizeSecurityGroupIngress\u0026#34;, \u0026#34;ec2:CreateClientVpnEndpoint\u0026#34;, \u0026#34;ec2:CreateClientVpnRoute\u0026#34;, \u0026#34;ec2:CreateCustomerGateway\u0026#34;, \u0026#34;ec2:CreateDhcpOptions\u0026#34;, \u0026#34;ec2:CreateFlowLogs\u0026#34;, \u0026#34;ec2:CreateInternetGateway\u0026#34;, \u0026#34;ec2:CreateLaunchTemplate\u0026#34;, \u0026#34;ec2:CreateNetworkAcl\u0026#34;, \u0026#34;ec2:CreateNetworkInterface\u0026#34;, \u0026#34;ec2:CreateNetworkInterfacePermission\u0026#34;, \u0026#34;ec2:CreateRoute\u0026#34;, \u0026#34;ec2:CreateRouteTable\u0026#34;, \u0026#34;ec2:CreateSecurityGroup\u0026#34;, \u0026#34;ec2:CreateSubnet\u0026#34;, \u0026#34;ec2:CreateSubnetCidrReservation\u0026#34;, \u0026#34;ec2:CreateTags\u0026#34;, \u0026#34;ec2:CreateTransitGateway\u0026#34;, \u0026#34;ec2:CreateTransitGatewayPeeringAttachment\u0026#34;, \u0026#34;ec2:CreateTransitGatewayPrefixListReference\u0026#34;, \u0026#34;ec2:CreateTransitGatewayRoute\u0026#34;, \u0026#34;ec2:CreateTransitGatewayRouteTable\u0026#34;, \u0026#34;ec2:CreateTransitGatewayVpcAttachment\u0026#34;, \u0026#34;ec2:CreateVpc\u0026#34;, \u0026#34;ec2:CreateVpcEndpoint\u0026#34;, \u0026#34;ec2:CreateVpcEndpointConnectionNotification\u0026#34;, \u0026#34;ec2:CreateVpcEndpointServiceConfiguration\u0026#34;, \u0026#34;ec2:CreateVpnConnection\u0026#34;, \u0026#34;ec2:CreateVpnConnectionRoute\u0026#34;, \u0026#34;ec2:CreateVpnGateway\u0026#34;, \u0026#34;ec2:DeleteCustomerGateway\u0026#34;, \u0026#34;ec2:DeleteFlowLogs\u0026#34;, \u0026#34;ec2:DeleteInternetGateway\u0026#34;, \u0026#34;ec2:DeleteNetworkInterface\u0026#34;, \u0026#34;ec2:DeleteNetworkInterfacePermission\u0026#34;, \u0026#34;ec2:DeleteRoute\u0026#34;, \u0026#34;ec2:DeleteRouteTable\u0026#34;, \u0026#34;ec2:DeleteSecurityGroup\u0026#34;, \u0026#34;ec2:DeleteSubnet\u0026#34;, \u0026#34;ec2:DeleteSubnetCidrReservation\u0026#34;, \u0026#34;ec2:DeleteTags\u0026#34;, \u0026#34;ec2:DeleteTransitGateway\u0026#34;, \u0026#34;ec2:DeleteTransitGatewayPeeringAttachment\u0026#34;, \u0026#34;ec2:DeleteTransitGatewayPrefixListReference\u0026#34;, \u0026#34;ec2:DeleteTransitGatewayRoute\u0026#34;, \u0026#34;ec2:DeleteTransitGatewayRouteTable\u0026#34;, \u0026#34;ec2:DeleteTransitGatewayVpcAttachment\u0026#34;, \u0026#34;ec2:DeleteVpc\u0026#34;, \u0026#34;ec2:DeleteVpcEndpoints\u0026#34;, \u0026#34;ec2:DeleteVpcEndpointServiceConfigurations\u0026#34;, \u0026#34;ec2:DeleteVpnConnection\u0026#34;, \u0026#34;ec2:DeleteVpnConnectionRoute\u0026#34;, \u0026#34;ec2:Describe*\u0026#34;, \u0026#34;ec2:DetachInternetGateway\u0026#34;, \u0026#34;ec2:DisassociateAddress\u0026#34;, \u0026#34;ec2:DisassociateRouteTable\u0026#34;, \u0026#34;ec2:GetLaunchTemplateData\u0026#34;, \u0026#34;ec2:GetTransitGatewayAttachmentPropagations\u0026#34;, \u0026#34;ec2:ModifyInstanceAttribute\u0026#34;, \u0026#34;ec2:ModifySecurityGroupRules\u0026#34;, \u0026#34;ec2:ModifyTransitGatewayVpcAttachment\u0026#34;, \u0026#34;ec2:ModifyVpcAttribute\u0026#34;, \u0026#34;ec2:ModifyVpcEndpoint\u0026#34;, \u0026#34;ec2:ReleaseAddress\u0026#34;, \u0026#34;ec2:ReplaceRoute\u0026#34;, \u0026#34;ec2:RevokeSecurityGroupEgress\u0026#34;, \u0026#34;ec2:RevokeSecurityGroupIngress\u0026#34;, \u0026#34;ec2:RunInstances\u0026#34;, \u0026#34;ec2:StartInstances\u0026#34;, \u0026#34;ec2:StopInstances\u0026#34;, \u0026#34;ec2:UpdateSecurityGroupRuleDescriptionsEgress\u0026#34;, \u0026#34;ec2:UpdateSecurityGroupRuleDescriptionsIngress\u0026#34;, \u0026#34;iam:AddRoleToInstanceProfile\u0026#34;, \u0026#34;iam:AttachRolePolicy\u0026#34;, \u0026#34;iam:CreateInstanceProfile\u0026#34;, \u0026#34;iam:CreatePolicy\u0026#34;, \u0026#34;iam:CreateRole\u0026#34;, \u0026#34;iam:DeleteInstanceProfile\u0026#34;, \u0026#34;iam:DeletePolicy\u0026#34;, \u0026#34;iam:DeleteRole\u0026#34;, \u0026#34;iam:DeleteRolePolicy\u0026#34;, \u0026#34;iam:DetachRolePolicy\u0026#34;, \u0026#34;iam:GetInstanceProfile\u0026#34;, \u0026#34;iam:GetPolicy\u0026#34;, \u0026#34;iam:GetRole\u0026#34;, \u0026#34;iam:GetRolePolicy\u0026#34;, \u0026#34;iam:ListPolicyVersions\u0026#34;, \u0026#34;iam:ListRoles\u0026#34;, \u0026#34;iam:PassRole\u0026#34;, \u0026#34;iam:PutRolePolicy\u0026#34;, \u0026#34;iam:RemoveRoleFromInstanceProfile\u0026#34;, \u0026#34;lambda:CreateFunction\u0026#34;, \u0026#34;lambda:DeleteFunction\u0026#34;, \u0026#34;lambda:DeleteLayerVersion\u0026#34;, \u0026#34;lambda:GetFunction\u0026#34;, \u0026#34;lambda:GetLayerVersion\u0026#34;, \u0026#34;lambda:InvokeFunction\u0026#34;, \u0026#34;lambda:PublishLayerVersion\u0026#34;, \u0026#34;logs:CreateLogGroup\u0026#34;, \u0026#34;logs:DeleteLogGroup\u0026#34;, \u0026#34;logs:DescribeLogGroups\u0026#34;, \u0026#34;logs:PutRetentionPolicy\u0026#34;, \u0026#34;route53:ChangeTagsForResource\u0026#34;, \u0026#34;route53:CreateHealthCheck\u0026#34;, \u0026#34;route53:CreateHostedZone\u0026#34;, \u0026#34;route53:CreateTrafficPolicy\u0026#34;, \u0026#34;route53:DeleteHostedZone\u0026#34;, \u0026#34;route53:DisassociateVPCFromHostedZone\u0026#34;, \u0026#34;route53:GetHostedZone\u0026#34;, \u0026#34;route53:ListHostedZones\u0026#34;, \u0026#34;route53domains:ListDomains\u0026#34;, \u0026#34;route53domains:ListOperations\u0026#34;, \u0026#34;route53domains:ListTagsForDomain\u0026#34;, \u0026#34;route53resolver:AssociateResolverEndpointIpAddress\u0026#34;, \u0026#34;route53resolver:AssociateResolverRule\u0026#34;, \u0026#34;route53resolver:CreateResolverEndpoint\u0026#34;, \u0026#34;route53resolver:CreateResolverRule\u0026#34;, \u0026#34;route53resolver:DeleteResolverEndpoint\u0026#34;, \u0026#34;route53resolver:DeleteResolverRule\u0026#34;, \u0026#34;route53resolver:DisassociateResolverEndpointIpAddress\u0026#34;, \u0026#34;route53resolver:DisassociateResolverRule\u0026#34;, \u0026#34;route53resolver:GetResolverEndpoint\u0026#34;, \u0026#34;route53resolver:GetResolverRule\u0026#34;, \u0026#34;route53resolver:ListResolverEndpointIpAddresses\u0026#34;, \u0026#34;route53resolver:ListResolverEndpoints\u0026#34;, \u0026#34;route53resolver:ListResolverRuleAssociations\u0026#34;, \u0026#34;route53resolver:ListResolverRules\u0026#34;, \u0026#34;route53resolver:ListTagsForResource\u0026#34;, \u0026#34;route53resolver:UpdateResolverEndpoint\u0026#34;, \u0026#34;route53resolver:UpdateResolverRule\u0026#34;, \u0026#34;s3:AbortMultipartUpload\u0026#34;, \u0026#34;s3:CreateBucket\u0026#34;, \u0026#34;s3:DeleteBucket\u0026#34;, \u0026#34;s3:DeleteObject\u0026#34;, \u0026#34;s3:GetAccountPublicAccessBlock\u0026#34;, \u0026#34;s3:GetBucketAcl\u0026#34;, \u0026#34;s3:GetBucketOwnershipControls\u0026#34;, \u0026#34;s3:GetBucketPolicy\u0026#34;, \u0026#34;s3:GetBucketPolicyStatus\u0026#34;, \u0026#34;s3:GetBucketPublicAccessBlock\u0026#34;, \u0026#34;s3:GetObject\u0026#34;, \u0026#34;s3:GetObjectVersion\u0026#34;, \u0026#34;s3:GetBucketVersioning\u0026#34;, \u0026#34;s3:ListAccessPoints\u0026#34;, \u0026#34;s3:ListAccessPointsForObjectLambda\u0026#34;, \u0026#34;s3:ListAllMyBuckets\u0026#34;, \u0026#34;s3:ListBucket\u0026#34;, \u0026#34;s3:ListBucketMultipartUploads\u0026#34;, \u0026#34;s3:ListBucketVersions\u0026#34;, \u0026#34;s3:ListJobs\u0026#34;, \u0026#34;s3:ListMultipartUploadParts\u0026#34;, \u0026#34;s3:ListMultiRegionAccessPoints\u0026#34;, \u0026#34;s3:ListStorageLensConfigurations\u0026#34;, \u0026#34;s3:PutAccountPublicAccessBlock\u0026#34;, \u0026#34;s3:PutBucketAcl\u0026#34;, \u0026#34;s3:PutBucketPolicy\u0026#34;, \u0026#34;s3:PutBucketPublicAccessBlock\u0026#34;, \u0026#34;s3:PutObject\u0026#34;, \u0026#34;secretsmanager:CreateSecret\u0026#34;, \u0026#34;secretsmanager:DeleteSecret\u0026#34;, \u0026#34;secretsmanager:DescribeSecret\u0026#34;, \u0026#34;secretsmanager:GetSecretValue\u0026#34;, \u0026#34;secretsmanager:ListSecrets\u0026#34;, \u0026#34;secretsmanager:ListSecretVersionIds\u0026#34;, \u0026#34;secretsmanager:PutResourcePolicy\u0026#34;, \u0026#34;secretsmanager:TagResource\u0026#34;, \u0026#34;secretsmanager:UpdateSecret\u0026#34;, \u0026#34;sns:ListTopics\u0026#34;, \u0026#34;ssm:DescribeInstanceProperties\u0026#34;, \u0026#34;ssm:DescribeSessions\u0026#34;, \u0026#34;ssm:GetConnectionStatus\u0026#34;, \u0026#34;ssm:GetParameters\u0026#34;, \u0026#34;ssm:ListAssociations\u0026#34;, \u0026#34;ssm:ResumeSession\u0026#34;, \u0026#34;ssm:StartSession\u0026#34;, \u0026#34;ssm:TerminateSession\u0026#34; ], \u0026#34;Resource\u0026#34;: \u0026#34;*\u0026#34; } ] } Khởi tạo tài nguyên bằng CloudFormation Trong lab này, chúng ta sẽ dùng N.Virginia region (us-east-1).\nĐể chuẩn bị cho môi trường làm workshop, chúng ta deploy CloudFormation template sau (click link): PrivateLinkWorkshop . Để nguyên các lựa chọn mặc định.\nLựa chọn 2 mục acknowledgement Chọn Create stack Quá trình triển khai CloudFormation cần khoảng 15 phút để hoàn thành.\n2 VPCs đã được tạo 3 EC2s đã được tạo "
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/5-workshop/5.3-s3-vpc/5.3.2-test-gwe/",
	"title": "Kiểm tra Gateway Endpoint",
	"tags": [],
	"description": "",
	"content": "Tạo S3 bucket Đi đến S3 management console Trong Bucket console, chọn Create bucket Trong Create bucket console Đặt tên bucket: chọn 1 tên mà không bị trùng trong phạm vi toàn cầu (gợi ý: lab\u0026lt;số-lab\u0026gt;\u0026lt;tên-bạn\u0026gt;) Giữ nguyên giá trị của các fields khác (default) Kéo chuột xuống và chọn Create bucket Tạo thành công S3 bucket Kết nối với EC2 bằng session manager Trong workshop này, bạn sẽ dùng AWS Session Manager để kết nối đến các EC2 instances. Session Manager là 1 tính năng trong dịch vụ Systems Manager được quản lý hoàn toàn bởi AWS. System manager cho phép bạn quản lý Amazon EC2 instances và các máy ảo on-premises (VMs)thông qua 1 browser-based shell. Session Manager cung cấp khả năng quản lý phiên bản an toàn và có thể kiểm tra mà không cần mở cổng vào, duy trì máy chủ bastion host hoặc quản lý khóa SSH.\nFirst cloud journey Lab để hiểu sâu hơn về Session manager.\nTrong AWS Management Console, gõ Systems Manager trong ô tìm kiếm và nhấn Enter: Từ Systems Manager menu, tìm Node Management ở thanh bên trái và chọn Session Manager: Click Start Session, và chọn EC2 instance tên Test-Gateway-Endpoint. Phiên bản EC2 này đã chạy trong \u0026ldquo;VPC cloud\u0026rdquo; và sẽ được dùng để kiểm tra khả năng kết nối với Amazon S3 thông qua điểm cuối Cổng mà bạn vừa tạo (s3-gwe).\nSession Manager sẽ mở browser tab mới với shell prompt: sh-4.2 $\nBạn đã bắt đầu phiên kết nối đến EC2 trong VPC Cloud thành công. Trong bước tiếp theo, chúng ta sẽ tạo một S3 bucket và một tệp trong đó.\nCreate a file and upload to s3 bucket Đổi về ssm-user\u0026rsquo;s thư mục bằng lệnh \u0026ldquo;cd ~\u0026rdquo; Tạo 1 file để kiểm tra bằng lệnh \u0026ldquo;fallocate -l 1G testfile.xyz\u0026rdquo;, 1 file tên \u0026ldquo;testfile.xyz\u0026rdquo; có kích thước 1GB sẽ được tạo. Tải file mình vừa tạo lên S3 với lệnh \u0026ldquo;aws s3 cp testfile.xyz s3://your-bucket-name\u0026rdquo;. Thay your-bucket-name bằng tên S3 bạn đã tạo. Bạn đã tải thành công tệp lên bộ chứa S3 của mình. Bây giờ bạn có thể kết thúc session.\nKiểm tra object trong S3 bucket Đi đến S3 console. Click tên s3 bucket của bạn Trong Bucket console, bạn sẽ thấy tệp bạn đã tải lên S3 bucket của mình Tóm tắt Chúc mừng bạn đã hoàn thành truy cập S3 từ VPC. Trong phần này, bạn đã tạo gateway endpoint cho Amazon S3 và sử dụng AWS CLI để tải file lên. Quá trình tải lên hoạt động vì gateway endpoint cho phép giao tiếp với S3 mà không cần Internet gateway gắn vào \u0026ldquo;VPC Cloud\u0026rdquo;. Điều này thể hiện chức năng của gateway endpoint như một đường dẫn an toàn đến S3 mà không cần đi qua pub lic Internet.\n"
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/5-workshop/5.4-s3-onprem/5.4.2-create-interface-enpoint/",
	"title": "Tạo một S3 Interface endpoint",
	"tags": [],
	"description": "",
	"content": "Trong phần này, bạn sẽ tạo và kiểm tra Interface Endpoint S3 bằng cách sử dụng môi trường truyền thống mô phỏng.\nQuay lại Amazon VPC menu. Trong thanh điều hướng bên trái, chọn Endpoints, sau đó click Create Endpoint.\nTrong Create endpoint console:\nĐặt tên interface endpoint Trong Service category, chọn aws services Trong Search box, gõ S3 và nhấn Enter. Chọn endpoint có tên com.amazonaws.us-east-1.s3. Đảm bảo rằng cột Type có giá trị Interface. Đối với VPC, chọn VPC Cloud từ drop-down. Đảm bảo rằng bạn chọn \u0026ldquo;VPC Cloud\u0026rdquo; và không phải \u0026ldquo;VPC On-prem\u0026rdquo;\nMở rộng Additional settings và đảm bảo rằng Enable DNS name không được chọn (sẽ sử dụng điều này trong phần tiếp theo của workshop) Chọn 2 subnets trong AZs sau: us-east-1a and us-east-1b Đối với Security group, chọn SGforS3Endpoint: Giữ default policy - full access và click Create endpoint Chúc mừng bạn đã tạo thành công S3 interface endpoint. Ở bước tiếp theo, chúng ta sẽ kiểm tra interface endpoint.\n"
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/1-worklog/1.10-week10/",
	"title": "Worklog Tuần 10",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 10: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 10: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/1-worklog/1.11-week11/",
	"title": "Worklog Tuần 11",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 11: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 11: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/1-worklog/1.12-week12/",
	"title": "Worklog Tuần 12",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 12: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 12: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/3-blogstranslated/",
	"title": "Các bài blogs đã dịch",
	"tags": [],
	"description": "",
	"content": "Blog 1 - Nâng cao khả năng hiển thị dữ liệu với Cribl Search và Amazon Managed Grafana Blog này trình bày cách kết hợp Cribl Search với Amazon Managed Grafana để tăng khả năng quan sát dữ liệu. Cribl Search cho phép truy vấn trực tiếp log và dữ liệu mà không cần index, trong khi Grafana giúp trực quan hóa thành dashboard theo thời gian thực. Giải pháp này giúp doanh nghiệp giám sát hạ tầng cloud, quản lý hiệu năng ứng dụng, và nâng cao bảo mật, đồng thời tối ưu chi phí vận hành.\nBlog 2 - Giúp khách hàng triển khai AI agent sẵn sàng cho sản xuất ở quy mô lớn Bài blog nói về cách AWS giúp khách hàng triển khai AI agent sẵn sàng cho sản xuất ở quy mô lớn, đảm bảo bảo mật, tin cậy và dễ áp dụng trong nhiều ngành khác nhau.\nBlog 3 - Tăng trưởng định hướng mục tiêu: Thúc đẩy thành công AWS Marketplace với COSS Bài viết chia sẻ cách AWS Marketplace tận dụng phần mềm nguồn mở thương mại (COSS) để thúc đẩy tăng trưởng định hướng mục tiêu cho cả khách hàng và nhà cung cấp. Nội dung làm rõ giá trị của COSS trong việc mang lại đổi mới, tính linh hoạt và khả năng triển khai nhanh, đồng thời hướng dẫn các tổ chức liên kết mục tiêu kinh doanh với việc áp dụng công nghệ thông qua AWS Marketplace.\nBlog 4 - \u0026hellip; Blog này giới thiệu cách bắt đầu xây dựng data lake trong lĩnh vực y tế bằng cách áp dụng kiến trúc microservices. Bạn sẽ tìm hiểu vì sao data lake quan trọng trong việc lưu trữ và phân tích dữ liệu y tế đa dạng (hồ sơ bệnh án điện tử, dữ liệu xét nghiệm, thiết bị IoT y tế…), cách microservices giúp hệ thống linh hoạt, dễ mở rộng và dễ bảo trì hơn. Bài viết cũng hướng dẫn các bước khởi tạo môi trường, tổ chức pipeline xử lý dữ liệu, và đảm bảo tuân thủ các tiêu chuẩn bảo mật \u0026amp; quyền riêng tư như HIPAA.\nBlog 5 - \u0026hellip; Blog này giới thiệu cách bắt đầu xây dựng data lake trong lĩnh vực y tế bằng cách áp dụng kiến trúc microservices. Bạn sẽ tìm hiểu vì sao data lake quan trọng trong việc lưu trữ và phân tích dữ liệu y tế đa dạng (hồ sơ bệnh án điện tử, dữ liệu xét nghiệm, thiết bị IoT y tế…), cách microservices giúp hệ thống linh hoạt, dễ mở rộng và dễ bảo trì hơn. Bài viết cũng hướng dẫn các bước khởi tạo môi trường, tổ chức pipeline xử lý dữ liệu, và đảm bảo tuân thủ các tiêu chuẩn bảo mật \u0026amp; quyền riêng tư như HIPAA.\nBlog 6 - \u0026hellip; Blog này giới thiệu cách bắt đầu xây dựng data lake trong lĩnh vực y tế bằng cách áp dụng kiến trúc microservices. Bạn sẽ tìm hiểu vì sao data lake quan trọng trong việc lưu trữ và phân tích dữ liệu y tế đa dạng (hồ sơ bệnh án điện tử, dữ liệu xét nghiệm, thiết bị IoT y tế…), cách microservices giúp hệ thống linh hoạt, dễ mở rộng và dễ bảo trì hơn. Bài viết cũng hướng dẫn các bước khởi tạo môi trường, tổ chức pipeline xử lý dữ liệu, và đảm bảo tuân thủ các tiêu chuẩn bảo mật \u0026amp; quyền riêng tư như HIPAA.\n"
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/5-workshop/5.4-s3-onprem/5.4.3-test-endpoint/",
	"title": "Kiểm tra Interface Endpoint",
	"tags": [],
	"description": "",
	"content": "Lấy regional DNS name (tên DNS khu vực) của S3 interface endpoint Trong Amazon VPC menu, chọn Endpoints.\nClick tên của endpoint chúng ta mới tạo ở mục 4.2: s3-interface-endpoint. Click details và lưu lại regional DNS name của endpoint (cái đầu tiên) vào text-editor của bạn để dùng ở các bước sau.\nKết nối đến EC2 instance ở trong \u0026ldquo;VPC On-prem\u0026rdquo; (giả lập môi trường truyền thống) Đi đến Session manager bằng cách gõ \u0026ldquo;session manager\u0026rdquo; vào ô tìm kiếm\nClick Start Session, chọn EC2 instance có tên Test-Interface-Endpoint. EC2 instance này đang chạy trên \u0026ldquo;VPC On-prem\u0026rdquo; và sẽ được sử dụng để kiểm tra kết nối đến Amazon S3 thông qua Interface endpoint. Session Manager sẽ mở 1 browser tab mới với shell prompt: sh-4.2 $\nĐi đến ssm-user\u0026rsquo;s home directory với lệnh \u0026ldquo;cd ~\u0026rdquo;\nTạo 1 file tên testfile2.xyz\nfallocate -l 1G testfile2.xyz Copy file vào S3 bucket mình tạo ở section 4.2 aws s3 cp --endpoint-url https://bucket.\u0026lt;Regional-DNS-Name\u0026gt; testfile2.xyz s3://\u0026lt;your-bucket-name\u0026gt; Câu lệnh này yêu cầu thông số \u0026ndash;endpoint-url, bởi vì bạn cần sử dụng DNS name chỉ định cho endpoint để truy cập vào S3 thông qua Interface endpoint. Không lấy \u0026rsquo; * \u0026rsquo; khi copy/paste tên DNS khu vực. Cung cấp tên S3 bucket của bạn Bây giờ tệp đã được thêm vào bộ chứa S3 của bạn. Hãy kiểm tra bộ chứa S3 của bạn trong bước tiếp theo.\nKiểm tra Object trong S3 bucket Đi đến S3 console Click Buckets Click tên bucket của bạn và bạn sẽ thấy testfile2.xyz đã được thêm vào s3 bucket của bạn "
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/5-workshop/5.3-s3-vpc/",
	"title": "Truy cập S3 từ VPC",
	"tags": [],
	"description": "",
	"content": "Sử dụng Gateway endpoint Trong phần này, bạn sẽ tạo một Gateway endpoint để truy cập Amazon S3 từ một EC2 instance. Gateway endpoint sẽ cho phép tải một object lên S3 bucket mà không cần sử dụng Internet Công cộng. Để tạo endpoint, bạn phải chỉ định VPC mà bạn muốn tạo endpoint và dịch vụ (trong trường hợp này là S3) mà bạn muốn thiết lập kết nối.\nNội dung Tạo gateway endpoint Test gateway endpoint "
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/4-eventparticipated/",
	"title": "Các events đã tham gia",
	"tags": [],
	"description": "",
	"content": "Trong quá trình thực tập, em đã tham gia 2 events, với mỗi event là một trải nghiệm đáng nhớ với những kiến thức mới, hay và bổ ích, cùng với đó là nhứng món quà và những khoảnh khắc rất tuyệt vời.\nEvent 1 Tên sự kiện: Vietnam Cloud Day 2025 – Ho Chi Minh City Connect Edition for Builders\nThời gian: 09:00 ngày 18/09/2025\nĐịa điểm: Tầng 26, tòa nhà Bitexco, số 02 đường Hải Triều, phường Sài Gòn, thành phố Hồ Chí Minh\nVai trò trong sự kiện: Người tham dự\nGiới thiệu sự kiện Vietnam Cloud Day là chuỗi sự kiện thường niên của AWS nhằm kết nối cộng đồng kỹ sư, nhà phát triển và doanh nghiệp tại Việt Nam.\nPhiên bản Ho Chi Minh City Connect Edition for Builders tập trung vào các chủ đề về điện toán đám mây, bảo mật, dữ liệu và ứng dụng trí tuệ nhân tạo (AI) trong hiện đại hóa hạ tầng công nghệ.\nNội dung và hoạt động chính Phiên khai mạc do đại diện AWS Việt Nam giới thiệu về tầm nhìn “Cloud for Builders” – khuyến khích các kỹ sư Việt Nam xây dựng sản phẩm trên nền tảng AWS. Các phiên chia sẻ kỹ thuật chuyên sâu xoay quanh: Tối ưu chi phí và hiệu năng trên AWS. Triển khai kiến trúc serverless và containerized. Giới thiệu dịch vụ mới như AWS Bedrock, Amazon Q, và Amazon Aurora. Khu vực AWS Builder Lab cho phép người tham dự trải nghiệm thực hành với hướng dẫn trực tiếp từ chuyên gia. Phần giao lưu và networking giữa khách tham dự và chuyên gia AWS. Kết quả và giá trị đạt được Tôi hiểu rõ hơn về các mô hình kiến trúc cloud-native, microservices và cách AWS hỗ trợ việc mở rộng hệ thống một cách linh hoạt. Học được cách ứng dụng AI và GenAI để tối ưu hóa dữ liệu và tự động hóa quy trình vận hành. Rèn luyện kỹ năng trao đổi, đặt câu hỏi với chuyên gia và kết nối với cộng đồng kỹ sư trẻ trong lĩnh vực điện toán đám mây. Nhận được nhiều tài liệu và quà tặng công nghệ từ AWS (sách, sticker, tài khoản AWS credit học tập). Event 2 Tên sự kiện: GenAI-powered App-DB Modernization workshop\nThời gian: 09:00 ngày 13/08/2025\nĐịa điểm: Tầng 26, tòa nhà Bitexco, số 02 đường Hải Triều, phường Sài Gòn, thành phố Hồ Chí Minh\nVai trò trong sự kiện: Người tham dự\n"
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/5-workshop/5.4-s3-onprem/5.4.4-dns-simulation/",
	"title": "Mô phỏng On-premises DNS ",
	"tags": [],
	"description": "",
	"content": "AWS PrivateLink endpoint có một địa chỉ IP cố định trong từng AZ nơi chúng được triển khai, trong suốt thời gian tồn tại của endpoint (cho đến khi endpoint bị xóa). Các địa chỉ IP này được gắn vào Elastic network interface (ENI). AWS khuyến nghị sử dụng DNS để resolve địa chỉ IP cho endpoint để các ứng dụng downstream sử dụng địa chỉ IP mới nhất khi ENIs được thêm vào AZ mới hoặc bị xóa theo thời gian.\nTrong phần này, bạn sẽ tạo một quy tắc chuyển tiếp (forwarding rule) để gửi các yêu cầu resolve DNS từ môi trường truyền thống (mô phỏng) đến Private Hosted Zone trên Route 53. Phần này tận dụng cơ sở hạ tầng do CloudFormation triển khai trong phần Chuẩn bị môi trường.\nTạo DNS Alias Records cho Interface endpoint Click link để đi đến Route 53 management console (Hosted Zones section). Mẫu CloudFormation mà bạn triển khai trong phần Chuẩn bị môi trường đã tạo Private Hosted Zone này. Nhấp vào tên của Private Hosted Zone, s3.us-east-1.amazonaws.com: Tạo 1 record mới trong Private Hosted Zone: Giữ nguyên Record name và record type Alias Button: click để enable Route traffic to: Alias to VPC Endpoint Region: US East (N. Virginia) [us-east-1] Chọn endpoint: Paste tên (Regional VPC Endpoint DNS) bạn đã lưu lại ở phần 4.3 Click Add another record, và add 1 cái record thứ 2 sử dụng những thông số sau: Record name: *. Record type: giữ giá trị default (type A) Alias Button: Click để enable Route traffic to: Alias to VPC Endpoint Region: US East (N. Virginia) [us-east-1] Chọn endpoint: Paste tên (Regional VPC Endpoint DNS) bạn đã lưu lại ở phần 4.3 Click Create records Record mới xuất hiện trên giao diện Route 53.\nTạo một Resolver Forwarding Rule Route 53 Resolver Forwarding Rules cho phép bạn chuyển tiếp các DNS queries từ VPC của bạn đến các nguồn khác để resolve name. Bên ngoài môi trường workshop, bạn có thể sử dụng tính năng này để chuyển tiếp các DNS queries từ VPC của bạn đến các máy chủ DNS chạy trên on-premises. Trong phần này, bạn sẽ mô phỏng một on-premises conditional forwarder bằng cách tạo một forwarding rule để chuyển tiếp các DNS queries for Amazon S3 đến một Private Hosted Zone chạy trong \u0026ldquo;VPC Cloud\u0026rdquo; để resolve PrivateLink interface endpoint regional DNS name.\nTừ giao diện Route 53, chọn Inbound endpoints trên thanh bên trái\nTrong giao diện Inbound endpoint, Chọn ID của Inbound endpoint.\nSao chép 2 địa chỉ IP trong danh sách vào trình chỉnh sửa. Từ giao diện Route 53, chọn Resolver \u0026gt; Rules và chọn Create rule Trong giao diện Create rule Name: myS3Rule Rule type: Forward Domain name: s3.us-east-1.amazonaws.com VPC: VPC On-prem Outbound endpoint: VPCOnpremOutboundEndpoint Target IP Addresses: điền cả hai IP bạn đã lưu trữ trên trình soạn thảo (inbound endpoint addresses) và sau đó chọn Submit Bạn đã tạo thành công resolver forwarding rule.\nKiểm tra on-premises DNS mô phỏng. Kết nối đến Test-Interface-Endpoint EC2 instance với Session Manager Kiểm tra DNS resolution. Lệnh dig sẽ trả về địa chỉ IP được gán cho VPC endpoint interface đang chạy trên VPC (địa chỉ IP của bạn sẽ khác): dig +short s3.us-east-1.amazonaws.com Các địa chỉ IP được trả về là các địa chỉ IP VPC enpoint, KHÔNG phải là các địa chỉ IP Resolver mà bạn đã dán từ trình chỉnh sửa văn bản của mình. Các địa chỉ IP của Resolver endpoint và VPC endpoin trông giống nhau vì chúng đều từ khối CIDR VPC Cloud.\nTruy cập vào menu VPC (phần Endpoints), chọn S3 interface endpoint. Nhấp vào tab Subnets và xác nhận rằng các địa chỉ IP được trả về bởi lệnh Dig khớp với VPC endpoint: Hãy quay lại shell của bạn và sử dụng AWS CLI để kiểm tra danh sách các bucket S3 của bạn: aws s3 ls --endpoint-url https://s3.us-east-1.amazonaws.com Kết thúc phiên làm việc của Session Manager của bạn: Trong phần này, bạn đã tạo một Interface Endpoint cho Amazon S3. Điểm cuối này có thể được truy cập từ on-premises thông qua Site-to-Site VPN hoặc AWS Direct Connect. Các điểm cuối Route 53 Resolver outbound giả lập chuyển tiếp các yêu cầu DNS từ on-premises đến một Private Hosted Zone đang chạy trên đám mây. Các điểm cuối Route 53 inbound nhận yêu cầu giải quyết và trả về một phản hồi chứa địa chỉ IP của Interface Endpoint VPC. Sử dụng DNS để giải quyết các địa chỉ IP của điểm cuối cung cấp tính sẵn sàng cao trong trường hợp một Availability Zone gặp sự cố.\n"
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/5-workshop/5.4-s3-onprem/",
	"title": "Truy cập S3 từ môi trường truyền thống",
	"tags": [],
	"description": "",
	"content": "Tổng quan Trong phần này, bạn sẽ tạo một Interface Endpoint để truy cập Amazon S3 từ môi trường truyền thống mô phỏng. Interface Endpoint sẽ cho phép bạn định tuyến đến Amazon S3 qua kết nối VPN từ môi trường truyền thống mô phỏng của bạn.\nTại sao nên sử dụng Interface Endpoint:\nCác Gateway endpoints chỉ hoạt động với các tài nguyên đang chạy trong VPC nơi chúng được tạo. Interface Endpoint hoạt động với tài nguyên chạy trong VPC và cả tài nguyên chạy trong môi trường truyền thống. Khả năng kết nối từ môi trường truyền thống của bạn với aws cloud có thể được cung cấp bởi AWS Site-to-Site VPN hoặc AWS Direct Connect. Interface Endpoint cho phép bạn kết nối với các dịch vụ do AWS PrivateLink cung cấp. Các dịch vụ này bao gồm một số dịch vụ AWS, dịch vụ do các đối tác và khách hàng AWS lưu trữ trong VPC của riêng họ (gọi tắt là Dịch vụ PrivateLink endpoints) và các dịch vụ Đối tác AWS Marketplace. Đối với workshop này, chúng ta sẽ tập trung vào việc kết nối với Amazon S3. "
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/5-workshop/5.5-policy/",
	"title": "VPC Endpoint Policies",
	"tags": [],
	"description": "",
	"content": "Khi bạn tạo một Interface Endpoint hoặc cổng, bạn có thể đính kèm một chính sách điểm cuối để kiểm soát quyền truy cập vào dịch vụ mà bạn đang kết nối. Chính sách VPC Endpoint là chính sách tài nguyên IAM mà bạn đính kèm vào điểm cuối. Nếu bạn không đính kèm chính sách khi tạo điểm cuối, thì AWS sẽ đính kèm chính sách mặc định cho bạn để cho phép toàn quyền truy cập vào dịch vụ thông qua điểm cuối.\nBạn có thể tạo chính sách chỉ hạn chế quyền truy cập vào các S3 bucket cụ thể. Điều này hữu ích nếu bạn chỉ muốn một số Bộ chứa S3 nhất định có thể truy cập được thông qua điểm cuối.\nTrong phần này, bạn sẽ tạo chính sách VPC Endpoint hạn chế quyền truy cập vào S3 bucket được chỉ định trong chính sách VPC Endpoint.\nKết nối tới EC2 và xác minh kết nối tới S3. Bắt đầu một phiên AWS Session Manager mới trên máy chủ có tên là Test-Gateway-Endpoint. Từ phiên này, xác minh rằng bạn có thể liệt kê nội dung của bucket mà bạn đã tạo trong Phần 1: Truy cập S3 từ VPC. aws s3 ls s3://\u0026lt;your-bucket-name\u0026gt; Nội dung của bucket bao gồm hai tệp có dung lượng 1GB đã được tải lên trước đó.\nTạo một bucket S3 mới; tuân thủ mẫu đặt tên mà bạn đã sử dụng trong Phần 1, nhưng thêm \u0026lsquo;-2\u0026rsquo; vào tên. Để các trường khác là mặc định và nhấp vào Create. Tạo bucket thành công. Policy mặc định cho phép truy cập vào tất cả các S3 Buckets thông qua VPC endpoint.\nTrong giao diện Edit Policy, sao chép và dán theo policy sau, thay thế yourbucketname-2 với tên bucket thứ hai của bạn. Policy này sẽ cho phép truy cập đến bucket mới thông qua VPC endpoint, nhưng không cho phép truy cập đến các bucket còn lại. Chọn Save để kích hoạt policy. { \u0026#34;Id\u0026#34;: \u0026#34;Policy1631305502445\u0026#34;, \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;, \u0026#34;Statement\u0026#34;: [ { \u0026#34;Sid\u0026#34;: \u0026#34;Stmt1631305501021\u0026#34;, \u0026#34;Action\u0026#34;: \u0026#34;s3:*\u0026#34;, \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, \u0026#34;Resource\u0026#34;: [ \u0026#34;arn:aws:s3:::yourbucketname-2\u0026#34;, \u0026#34;arn:aws:s3:::yourbucketname-2/*\u0026#34; ], \u0026#34;Principal\u0026#34;: \u0026#34;*\u0026#34; } ] } Cấu hình policy thành công.\nTừ session của bạn trên Test-Gateway-Endpoint instance, kiểm tra truy cập đến S3 bucket bạn tạo ở bước đầu aws s3 ls s3://\u0026lt;yourbucketname\u0026gt; Câu lệnh trả về lỗi bởi vì truy cập vào S3 bucket không có quyền trong VPC endpoint policy.\nTrở lại home directory của bạn trên EC2 instance cd~ Tạo file fallocate -l 1G test-bucket2.xyz Sao chép file lên bucket thứ 2 aws s3 cp test-bucket2.xyz s3://\u0026lt;your-2nd-bucket-name\u0026gt; Thao tác này được cho phép bởi VPC endpoint policy.\nSau đó chúng ta kiểm tra truy cập vào S3 bucket đầu tiên\naws s3 cp test-bucket2.xyz s3://\u0026lt;your-1st-bucket-name\u0026gt;\nCâu lệnh xảy ra lỗi bởi vì bucket không có quyền truy cập bởi VPC endpoint policy.\nTrong phần này, bạn đã tạo chính sách VPC Endpoint cho Amazon S3 và sử dụng AWS CLI để kiểm tra chính sách. Các hoạt động AWS CLI liên quan đến bucket S3 ban đầu của bạn thất bại vì bạn áp dụng một chính sách chỉ cho phép truy cập đến bucket thứ hai mà bạn đã tạo. Các hoạt động AWS CLI nhắm vào bucket thứ hai của bạn thành công vì chính sách cho phép chúng. Những chính sách này có thể hữu ích trong các tình huống khi bạn cần kiểm soát quyền truy cập vào tài nguyên thông qua VPC Endpoint.\n"
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/5-workshop/",
	"title": "Workshop",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nĐảm bảo truy cập Hybrid an toàn đến S3 bằng cách sử dụng VPC endpoint Tổng quan AWS PrivateLink cung cấp kết nối riêng tư đến các dịch vụ aws từ VPCs hoặc trung tâm dữ liệu (on-premise) mà không làm lộ lưu lượng truy cập ra ngoài public internet.\nTrong bài lab này, chúng ta sẽ học cách tạo, cấu hình, và kiểm tra VPC endpoints để cho phép workload của bạn tiếp cận các dịch vụ AWS mà không cần đi qua Internet công cộng.\nChúng ta sẽ tạo hai loại endpoints để truy cập đến Amazon S3: gateway vpc endpoint và interface vpc endpoint. Hai loại vpc endpoints này mang đến nhiều lợi ích tùy thuộc vào việc bạn truy cập đến S3 từ môi trường cloud hay từ trung tâm dữ liệu (on-premise).\nGateway - Tạo gateway endpoint để gửi lưu lượng đến Amazon S3 hoặc DynamoDB using private IP addresses. Bạn điều hướng lưu lượng từ VPC của bạn đến gateway endpoint bằng các bảng định tuyến (route tables) Interface - Tạo interface endpoint để gửi lưu lượng đến các dịch vụ điểm cuối (endpoints) sử dụng Network Load Balancer để phân phối lưu lượng. Lưu lượng dành cho dịch vụ điểm cuối được resolved bằng DNS. Nội dung Tổng quan về workshop Chuẩn bị Truy cập đến S3 từ VPC Truy cập đến S3 từ TTDL On-premises VPC Endpoint Policies (làm thêm) Dọn dẹp tài nguyên "
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/5-workshop/5.6-cleanup/",
	"title": "Dọn dẹp tài nguyên",
	"tags": [],
	"description": "",
	"content": "Dọn dẹp tài nguyên Xin chúc mừng bạn đã hoàn thành xong lab này! Trong lab này, bạn đã học về các mô hình kiến trúc để truy cập Amazon S3 mà không sử dụng Public Internet.\nBằng cách tạo Gateway endpoint, bạn đã cho phép giao tiếp trực tiếp giữa các tài nguyên EC2 và Amazon S3, mà không đi qua Internet Gateway. Bằng cách tạo Interface endpoint, bạn đã mở rộng kết nối S3 đến các tài nguyên chạy trên trung tâm dữ liệu trên chỗ của bạn thông qua AWS Site-to-Site VPN hoặc Direct Connect. Dọn dẹp Điều hướng đến Hosted Zones trên phía trái của bảng điều khiển Route 53. Nhấp vào tên của s3.us-east-1.amazonaws.com zone. Nhấp vào Delete và xác nhận việc xóa bằng cách nhập từ khóa \u0026ldquo;delete\u0026rdquo;. Disassociate Route 53 Resolver Rule - myS3Rule from \u0026ldquo;VPC Onprem\u0026rdquo; and Delete it. 4.Mở console của CloudFormation và xóa hai stack CloudFormation mà bạn đã tạo cho bài thực hành này:\nPLOnpremSetup PLCloudSetup Xóa các S3 bucket Mở bảng điều khiển S3 Chọn bucket chúng ta đã tạo cho lab, nhấp chuột và xác nhận là empty. Nhấp Delete và xác nhận delete. "
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/6-self-evaluation/",
	"title": "Tự đánh giá",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nTrong suốt thời gian thực tập tại [Tên công ty/tổ chức] từ [ngày bắt đầu] đến [ngày kết thúc], tôi đã có cơ hội học hỏi, rèn luyện và áp dụng kiến thức đã được trang bị tại trường vào môi trường làm việc thực tế.\nTôi đã tham gia [mô tả ngắn gọn dự án hoặc công việc chính], qua đó cải thiện kỹ năng [liệt kê kỹ năng: lập trình, phân tích, viết báo cáo, giao tiếp…].\nVề tác phong, tôi luôn cố gắng hoàn thành tốt nhiệm vụ, tuân thủ nội quy, và tích cực trao đổi với đồng nghiệp để nâng cao hiệu quả công việc.\nĐể phản ánh một cách khách quan quá trình thực tập, tôi xin tự đánh giá bản thân dựa trên các tiêu chí dưới đây:\nSTT Tiêu chí Mô tả Tốt Khá Trung bình 1 Kiến thức và kỹ năng chuyên môn Hiểu biết về ngành, áp dụng kiến thức vào thực tế, kỹ năng sử dụng công cụ, chất lượng công việc ✅ ☐ ☐ 2 Khả năng học hỏi Tiếp thu kiến thức mới, học hỏi nhanh ☐ ✅ ☐ 3 Chủ động Tự tìm hiểu, nhận nhiệm vụ mà không chờ chỉ dẫn ✅ ☐ ☐ 4 Tinh thần trách nhiệm Hoàn thành công việc đúng hạn, đảm bảo chất lượng ✅ ☐ ☐ 5 Kỷ luật Tuân thủ giờ giấc, nội quy, quy trình làm việc ☐ ☐ ✅ 6 Tính cầu tiến Sẵn sàng nhận feedback và cải thiện bản thân ☐ ✅ ☐ 7 Giao tiếp Trình bày ý tưởng, báo cáo công việc rõ ràng ☐ ✅ ☐ 8 Hợp tác nhóm Làm việc hiệu quả với đồng nghiệp, tham gia nhóm ✅ ☐ ☐ 9 Ứng xử chuyên nghiệp Tôn trọng đồng nghiệp, đối tác, môi trường làm việc ✅ ☐ ☐ 10 Tư duy giải quyết vấn đề Nhận diện vấn đề, đề xuất giải pháp, sáng tạo ☐ ✅ ☐ 11 Đóng góp vào dự án/tổ chức Hiệu quả công việc, sáng kiến cải tiến, ghi nhận từ team ✅ ☐ ☐ 12 Tổng thể Đánh giá chung về toàn bộ quá trình thực tập ✅ ☐ ☐ Cần cải thiện Nâng cao tính kỹ luật, chấp hành nghiêm chỉnh nội quy của công ty hoặc bất kỳ trong một tổ chức nào Cải thiện trong cách tư duy giải quyết vấn đề Học cách giao tiếp tốt hơn trong giao tiếp hằng ngày và trong công việc, xử lý tình huống "
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/7-feedback/",
	"title": "Chia sẻ, đóng góp ý kiến",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nTại đây bạn có thể tự do đóng góp ý kiến cá nhân về những trải nghiệm khi tham gia chương trình First Cloud Journey, giúp team FCJ cải thiện những vấn đề còn thiếu sót dựa trên các hạng mục sau:\nĐánh giá chung 1. Môi trường làm việc\nMôi trường làm việc rất thân thiện và cởi mở. Các thành viên trong FCJ luôn sẵn sàng hỗ trợ khi mình gặp khó khăn, kể cả ngoài giờ làm việc. Không gian làm việc gọn gàng, thoải mái, giúp mình tập trung tốt hơn. Tuy nhiên, mình nghĩ có thể bổ sung thêm một số buổi giao lưu hoặc team bonding để mọi người hiểu nhau hơn.\n2. Sự hỗ trợ của mentor / team admin\nMentor hướng dẫn rất chi tiết, giải thích rõ ràng khi mình chưa hiểu và luôn khuyến khích mình đặt câu hỏi. Team admin hỗ trợ các thủ tục, tài liệu và tạo điều kiện để mình làm việc thuận lợi. Mình đánh giá cao việc mentor cho phép mình thử và tự xử lý vấn đề thay vì chỉ đưa đáp án.\n3. Sự phù hợp giữa công việc và chuyên ngành học\nCông việc mình được giao phù hợp với kiến thức mình đã học ở trường, đồng thời mở rộng thêm những mảng mới mà mình chưa từng được tiếp cận. Nhờ vậy, mình vừa củng cố kiến thức nền tảng, vừa học thêm kỹ năng thực tế.\n4. Cơ hội học hỏi \u0026amp; phát triển kỹ năng\nTrong quá trình thực tập, mình học được nhiều kỹ năng mới như sử dụng công cụ quản lý dự án, kỹ năng làm việc nhóm, và cả cách giao tiếp chuyên nghiệp trong môi trường công ty. Mentor cũng chia sẻ nhiều kinh nghiệm thực tế giúp mình định hướng tốt hơn cho sự nghiệp.\n5. Văn hóa \u0026amp; tinh thần đồng đội\nVăn hóa công ty rất tích cực: mọi người tôn trọng lẫn nhau, làm việc nghiêm túc nhưng vẫn vui vẻ. Khi có dự án gấp, mọi người cùng nhau cố gắng, hỗ trợ không phân biệt vị trí. Điều này giúp mình cảm thấy mình là một phần của tập thể, dù chỉ là thực tập sinh.\n6. Chính sách / phúc lợi cho thực tập sinh\nCông ty có hỗ trợ phụ cấp thực tập và tạo điều kiện về thời gian linh hoạt khi cần thiết. Ngoài ra, việc được tham gia các buổi đào tạo nội bộ là một điểm cộng lớn.\nMột số câu hỏi khác Điều bạn hài lòng nhất trong thời gian thực tập? Điều bạn nghĩ công ty cần cải thiện cho các thực tập sinh sau? Nếu giới thiệu cho bạn bè, bạn có khuyên họ thực tập ở đây không? Vì sao? Đề xuất \u0026amp; mong muốn Bạn có đề xuất gì để cải thiện trải nghiệm trong kỳ thực tập? Bạn có muốn tiếp tục chương trình này trong tương lai? Góp ý khác (tự do chia sẻ): "
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://bacdang2k4.github.io/fcj-worklog-web/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]